(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{433:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("消息队列在使用过程中，面临着很多实际问题需要思考：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718155003157.png",alt:"image-20210718155003157"}})]),t._v(" "),a("h2",{attrs:{id:"消息可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息可靠性"}},[t._v("#")]),t._v(" 消息可靠性")]),t._v(" "),a("p",[t._v("消息从发送，到消费者接收，会经理多个过程：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718155059371.png",alt:"image-20210718155059371"}})]),t._v(" "),a("p",[t._v("其中的每一步都可能导致消息丢失，常见的丢失原因包括：")]),t._v(" "),a("ul",[a("li",[t._v("发送时丢失：\n"),a("ul",[a("li",[t._v("生产者发送的消息未送达exchange")]),t._v(" "),a("li",[t._v("消息到达exchange后未到达queue")])])]),t._v(" "),a("li",[t._v("MQ宕机，queue将消息丢失")]),t._v(" "),a("li",[t._v("consumer接收到消息后未消费就宕机")])]),t._v(" "),a("p",[t._v("针对这些问题，RabbitMQ分别给出了解决方案：")]),t._v(" "),a("ul",[a("li",[t._v("生产者确认机制")]),t._v(" "),a("li",[t._v("mq持久化")]),t._v(" "),a("li",[t._v("消费者确认机制")]),t._v(" "),a("li",[t._v("失败重试机制")])]),t._v(" "),a("h3",{attrs:{id:"生产者消息确认"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者消息确认"}},[t._v("#")]),t._v(" 生产者消息确认")]),t._v(" "),a("p",[t._v("RabbitMQ提供了publisher confirm机制来避免消息发送到MQ过程中丢失。这种机制必须给每个消息指定一个唯一ID。消息发送到MQ以后，会返回一个结果给发送者，表示消息是否处理成功。")]),t._v(" "),a("p",[t._v("返回结果有两种方式：")]),t._v(" "),a("ul",[a("li",[t._v("publisher-confirm，发送者确认\n"),a("ul",[a("li",[t._v("消息成功投递到交换机，返回ack")]),t._v(" "),a("li",[t._v("消息未投递到交换机，返回nack")])])]),t._v(" "),a("li",[t._v("publisher-return，发送者回执\n"),a("ul",[a("li",[t._v("消息投递到交换机了，但是没有路由到队列。返回ACK，及路由失败原因。")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/%E6%B6%88%E6%81%AF%E7%A1%AE%E8%AE%A4.png",alt:""}})]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718161707992.png",alt:"image-20210718161707992"}})]),t._v(" "),a("h4",{attrs:{id:"修改配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改配置"}},[t._v("#")]),t._v(" 修改配置")]),t._v(" "),a("p",[t._v("首先，修改publisher服务中的application.yml文件，添加下面的内容：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("publisher-confirm-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" correlated\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("publisher-returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mandatory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n   \n")])])]),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("publish-confirm-type")]),t._v("：开启publisher-confirm，这里支持两种类型：\n"),a("ul",[a("li",[a("code",[t._v("simple")]),t._v("：同步等待confirm结果，直到超时")]),t._v(" "),a("li",[a("code",[t._v("correlated")]),t._v("：异步回调，定义ConfirmCallback，MQ返回结果时会回调这个ConfirmCallback")])])]),t._v(" "),a("li",[a("code",[t._v("publish-returns")]),t._v("：开启publish-return功能，同样是基于callback机制，不过是定义ReturnCallback")]),t._v(" "),a("li",[a("code",[t._v("template.mandatory")]),t._v("：定义消息路由失败时的策略。true，则调用ReturnCallback；false：则直接丢弃消息")])]),t._v(" "),a("h4",{attrs:{id:"定义return回调-投递到队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义return回调-投递到队列"}},[t._v("#")]),t._v(" 定义Return回调-- 投递到队列")]),t._v(" "),a("p",[t._v("每个RabbitTemplate只能配置一个ReturnCallback，因此需要在项目加载时配置：")]),t._v(" "),a("p",[t._v("修改publisher服务，添加一个：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itcast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("lombok"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slf4j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slf4j")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextAware")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextAware")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取RabbitTemplate")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")]),t._v(" rabbitTemplate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置ReturnCallback")]),t._v("\n        rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setReturnCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replyCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replyText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 投递失败，记录日志")]),t._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息发送失败，应答码{}，原因{}，交换机{}，路由键{},消息{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                     replyCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replyText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有业务需要，可以重发消息")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"定义confirmcallback-投递到交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义confirmcallback-投递到交换机"}},[t._v("#")]),t._v(" 定义ConfirmCallback -- 投递到交换机")]),t._v(" "),a("p",[t._v("ConfirmCallback可以在发送消息时指定，因为每个业务处理confirm成功或失败的逻辑不一定相同。")]),t._v(" "),a("p",[t._v("在publisher服务的cn.itcast.mq.spring.SpringAmqpTest类中，定义一个单元测试方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSendMessage2SimpleQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.消息体")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, spring amqp!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.全局唯一的消息ID，需要封装到CorrelationData中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),t._v(" correlationData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.添加callback")]),t._v("\n    correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFuture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.1.ack，消息成功")]),t._v("\n                log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息发送成功, ID:{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.2.nack，消息失败")]),t._v("\n                log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息发送失败, ID:{}, 原因{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息发送异常, ID:{}, 原因{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.发送消息")]),t._v("\n    rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("convertAndSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 休眠一会儿，等待ack回执")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("消息确认的情况")]),t._v(" "),a("ul",[a("li",[t._v("publish-comfirm\n"),a("ul",[a("li",[t._v("消息成功发送到交换机，返回"),a("code",[t._v("ack")])]),t._v(" "),a("li",[t._v("消息发送失败，没有到达交换机，返回"),a("code",[t._v("nack")])]),t._v(" "),a("li",[t._v("消息发送过程出现异常，没有收到回执")])])]),t._v(" "),a("li",[t._v("publish-return\n"),a("ul",[a("li",[t._v("消息成功发送到交换机，但是没有发送到队列， 调用 "),a("code",[t._v("ReturnCallback")])])])])]),t._v(" "),a("h3",{attrs:{id:"消息持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息持久化"}},[t._v("#")]),t._v(" 消息持久化")]),t._v(" "),a("p",[a("strong",[t._v("SpringAMQP 声明的交换机,队列，消息都是持久化的")])]),t._v(" "),a("p",[t._v("生产者确认可以确保消息投递到RabbitMQ的队列中，但是消息发送到RabbitMQ以后，如果突然宕机，也可能导致消息丢失。")]),t._v(" "),a("p",[t._v("要想确保消息在RabbitMQ中安全保存，必须开启消息持久化机制。")]),t._v(" "),a("ul",[a("li",[t._v("交换机持久化")]),t._v(" "),a("li",[t._v("队列持久化")]),t._v(" "),a("li",[t._v("消息持久化")])]),t._v(" "),a("h4",{attrs:{id:"交换机持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交换机持久化"}},[t._v("#")]),t._v(" 交换机持久化")]),t._v(" "),a("p",[t._v("RabbitMQ中交换机默认是非持久化的，mq重启后就丢失。")]),t._v(" "),a("p",[t._v("SpringAMQP中可以通过代码指定交换机持久化：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三个参数：交换机名称、是否持久化、当没有queue与其绑定时是否自动删除")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("事实上，默认情况下，由SpringAMQP声明的交换机都是持久化的。")]),t._v(" "),a("p",[t._v("可以在RabbitMQ控制台看到持久化的交换机都会带上"),a("code",[t._v("D")]),t._v("的标示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718164412450.png",alt:"image-20210718164412450"}})]),t._v(" "),a("h4",{attrs:{id:"队列持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列持久化"}},[t._v("#")]),t._v(" 队列持久化")]),t._v(" "),a("p",[t._v("RabbitMQ中队列默认是非持久化的，mq重启后就丢失。")]),t._v(" "),a("p",[t._v("SpringAMQP中可以通过代码指定交换机持久化：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用QueueBuilder构建队列，durable就是持久化的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueueBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("durable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("事实上，默认情况下，由SpringAMQP声明的队列都是持久化的。")]),t._v(" "),a("p",[t._v("可以在RabbitMQ控制台看到持久化的队列都会带上"),a("code",[t._v("D")]),t._v("的标示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718164729543.png",alt:"image-20210718164729543"}})]),t._v(" "),a("h4",{attrs:{id:"消息持久化-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息持久化-2"}},[t._v("#")]),t._v(" 消息持久化")]),t._v(" "),a("p",[t._v("利用SpringAMQP发送消息时，可以设置消息的属性（MessageProperties），指定delivery-mode：")]),t._v(" "),a("ul",[a("li",[t._v("1：非持久化")]),t._v(" "),a("li",[t._v("2：持久化")])]),t._v(" "),a("p",[t._v("用java代码指定：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718165100016.png",alt:"image-20210718165100016"}})]),t._v(" "),a("p",[t._v("默认情况下，SpringAMQP发出的任何消息都是持久化的，不用特意指定。")]),t._v(" "),a("h3",{attrs:{id:"消费者消息确认"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费者消息确认"}},[t._v("#")]),t._v(" 消费者消息确认")]),t._v(" "),a("p",[t._v("RabbitMQ是"),a("strong",[t._v("阅后即焚")]),t._v("机制，RabbitMQ确认消息被消费者消费后会立刻删除。")]),t._v(" "),a("p",[t._v("而RabbitMQ是通过消费者回执来确认消费者是否成功处理消息的：消费者获取消息后，应该向RabbitMQ发送ACK回执，表明自己已经处理消息。")]),t._v(" "),a("p",[a("strong",[t._v("消息者消费消息异常情况：")])]),t._v(" "),a("ul",[a("li",[t._v("消费者没有接收到消息  "),a("code",[t._v("nack")])]),t._v(" "),a("li",[t._v("消费者处理消息的时候出现了异常  "),a("code",[t._v("nack")])]),t._v(" "),a("li",[t._v("消费者接收到消息，没有来的及处理，宕机了  "),a("code",[t._v("没有回复")])])]),t._v(" "),a("p",[t._v("设想这样的场景：")]),t._v(" "),a("ul",[a("li",[t._v("1）RabbitMQ投递消息给消费者")]),t._v(" "),a("li",[t._v("2）消费者获取消息后，返回ACK给RabbitMQ")]),t._v(" "),a("li",[t._v("3）RabbitMQ删除消息")]),t._v(" "),a("li",[t._v("4）消费者宕机，消息尚未处理")])]),t._v(" "),a("p",[t._v("这样，消息就丢失了。因此消费者返回ACK的时机非常重要。")]),t._v(" "),a("p",[t._v("而SpringAMQP则允许配置三种确认模式：")]),t._v(" "),a("p",[t._v("•manual：手动ack，需要在业务代码结束后，调用api发送ack。")]),t._v(" "),a("p",[t._v("•auto：自动ack，由spring监测listener代码是否出现异常，没有异常则返回ack；抛出异常则返回nack")]),t._v(" "),a("p",[t._v("•none：关闭ack，MQ假定消费者获取消息后会成功处理，因此消息投递后立即被删除")]),t._v(" "),a("p",[t._v("由此可知：")]),t._v(" "),a("ul",[a("li",[t._v("none模式下，消息投递是不可靠的，可能丢失")]),t._v(" "),a("li",[t._v("auto模式类似事务机制，出现异常时返回nack，消息回滚到mq；没有异常，返回ack")]),t._v(" "),a("li",[t._v("manual：自己根据业务情况，判断什么时候该ack")])]),t._v(" "),a("p",[t._v("一般，我们都是使用默认的auto即可。")]),t._v(" "),a("h4",{attrs:{id:"演示none模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演示none模式"}},[t._v("#")]),t._v(" 演示none模式")]),t._v(" "),a("p",[t._v("修改consumer服务的application.yml文件，添加下面内容：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("acknowledge-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 关闭ack")]),t._v("\n")])])]),a("p",[t._v("修改consumer服务的SpringRabbitListener类中的方法，模拟一个消息处理异常：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RabbitListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queues "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listenSimpleQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消费者接收到simple.queue的消息：【{}】"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟异常")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息处理完成！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("测试可以发现，当消息处理抛异常时，消息依然被RabbitMQ删除了。")]),t._v(" "),a("h4",{attrs:{id:"演示auto模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演示auto模式"}},[t._v("#")]),t._v(" 演示auto模式")]),t._v(" "),a("p",[t._v("再次把确认机制修改为auto:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("acknowledge-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 关闭ack")]),t._v("\n")])])]),a("p",[t._v("在异常位置打断点，再次发送消息，程序卡在断点时，可以发现此时消息状态为unack（未确定状态）：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718171705383.png",alt:"image-20210718171705383"}})]),t._v(" "),a("p",[t._v("抛出异常后，因为Spring会自动返回nack，所以消息恢复至Ready状态，并且没有被RabbitMQ删除：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718171759179.png",alt:"image-20210718171759179"}})]),t._v(" "),a("h3",{attrs:{id:"消费失败重试机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费失败重试机制"}},[t._v("#")]),t._v(" 消费失败重试机制")]),t._v(" "),a("p",[t._v("当消费者出现异常后，消息会不断requeue（重入队）到队列，再重新发送给消费者，然后再次异常，再次requeue，无限循环，导致mq的消息处理飙升，带来不必要的压力：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718172746378.png",alt:"image-20210718172746378"}})]),t._v(" "),a("p",[t._v("怎么办呢？")]),t._v(" "),a("h4",{attrs:{id:"本地重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地重试"}},[t._v("#")]),t._v(" 本地重试")]),t._v(" "),a("p",[t._v("我们可以利用Spring的retry机制，在消费者出现异常时利用本地重试，而不是无限制的requeue到mq队列。")]),t._v(" "),a("p",[t._v("修改consumer服务的application.yml文件，添加内容：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 开启消费者失败重试")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initial-interval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 初识的失败等待时长为1秒")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("multiplier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 失败的等待时长倍数，下次等待时长 = multiplier * last-interval")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-attempts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 最大重试次数")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stateless")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## true无状态；false有状态。如果业务中包含事务，这里改为false")]),t._v("\n")])])]),a("p",[t._v("重启consumer服务，重复之前的测试。可以发现：")]),t._v(" "),a("ul",[a("li",[t._v("在重试3次后，SpringAMQP会抛出异常AmqpRejectAndDontRequeueException，说明本地重试触发了")]),t._v(" "),a("li",[t._v("查看RabbitMQ控制台，发现消息被删除了，说明最后SpringAMQP返回的是ack，mq删除消息了")])]),t._v(" "),a("p",[t._v("结论：")]),t._v(" "),a("ul",[a("li",[t._v("开启本地重试时，消息处理过程中抛出异常，不会requeue到队列，而是在消费者本地重试")]),t._v(" "),a("li",[a("strong",[t._v("重试达到最大次数后，Spring会返回ack(reject)，消息会被丢弃")])])]),t._v(" "),a("h4",{attrs:{id:"失败策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#失败策略"}},[t._v("#")]),t._v(" 失败策略")]),t._v(" "),a("p",[t._v("在之前的测试中，达到最大重试次数后，消息会被丢弃，这是由Spring内部机制决定的。")]),t._v(" "),a("p",[t._v("在开启重试模式后，重试次数耗尽，如果消息依然失败，则需要有"),a("code",[t._v("MessageRecovery")]),t._v("接口来处理，它包含三种不同的实现：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("RejectAndDontRequeueRecoverer：重试耗尽后，直接reject，丢弃消息。默认就是这种方式")])]),t._v(" "),a("li",[a("p",[t._v("ImmediateRequeueMessageRecoverer：重试耗尽后，返回nack，消息重新入队")])]),t._v(" "),a("li",[a("p",[t._v("RepublishMessageRecoverer：重试耗尽后，将失败消息投递到指定的交换机——"),a("strong",[t._v("error.direct")])])])]),t._v(" "),a("p",[t._v("比较优雅的一种处理方案是RepublishMessageRecoverer，失败后将消息投递到一个指定的，专门存放异常消息的队列--"),a("strong",[t._v("error.direct")]),t._v("，后续由人工集中处理。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/%E5%BC%82%E5%B8%B8%E4%BA%A4%E6%8D%A2%E6%9C%BA.png",alt:""}})]),t._v(" "),a("p",[t._v("1）在consumer服务中定义处理失败消息的交换机和队列")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorMessageExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" errorQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" errorMessageExchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BindingBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorMessageExchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("2）定义一个RepublishMessageRecoverer，关联队列和交换机")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageRecoverer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("republishMessageRecoverer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")]),t._v(" rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RepublishMessageRecoverer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("完整代码：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itcast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BindingBuilder")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("retry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageRecoverer")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("retry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RepublishMessageRecoverer")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bean")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ErrorMessageConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorMessageExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" errorQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" errorMessageExchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BindingBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorMessageExchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//TODO 重写 消息者消费消息失败 的 本地重试失败策略")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ctrl + H 查看类结构层次")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageRecoverer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("republishMessageRecoverer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RabbitTemplate")]),t._v(" rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RepublishMessageRecoverer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" "),a("strong",[t._v("总结")])]),t._v(" "),a("p",[t._v("如何确保RabbitMQ消息的可靠性？(3个方面)")]),t._v(" "),a("ul",[a("li",[t._v("生产者方面\n"),a("ul",[a("li",[t._v("开启生产者确认机制，确保生产者的消息能到达队列")])])]),t._v(" "),a("li",[t._v("持久化方面（mq）\n"),a("ul",[a("li",[t._v("开启持久化功能，确保消息未消费前在队列中不会丢失")])])]),t._v(" "),a("li",[t._v("消费者方面\n"),a("ul",[a("li",[t._v("开启消费者确认机制为auto，由spring确认消息处理成功后完成ack")]),t._v(" "),a("li",[t._v("开启消费者失败重试机制，\n"),a("ul",[a("li",[t._v("默认是 多次失败后，直接将消息丢弃。"),a("code",[t._v("RejectAndDontRequeueRecoverer")])]),t._v(" "),a("li",[t._v("设置MessageRecoverer 策略为"),a("code",[t._v("RepublishMessageRecoverer")]),t._v("，多次重试失败后将消息投递到"),a("strong",[t._v("异常交换机")]),t._v("，交由人工处理")])])])])])]),t._v(" "),a("h2",{attrs:{id:"死信交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死信交换机"}},[t._v("#")]),t._v(" 死信交换机")]),t._v(" "),a("h3",{attrs:{id:"初识死信交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识死信交换机"}},[t._v("#")]),t._v(" 初识死信交换机")]),t._v(" "),a("h4",{attrs:{id:"什么是死信交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是死信交换机"}},[t._v("#")]),t._v(" 什么是死信交换机")]),t._v(" "),a("p",[t._v("什么是死信？")]),t._v(" "),a("p",[t._v("当一个队列中的消息满足下列情况之一时，可以成为死信（dead letter）：")]),t._v(" "),a("ul",[a("li",[t._v("消费者使用basic.reject或 basic.nack声明消费失败，"),a("strong",[t._v("并且消息的requeue参数设置为false")])]),t._v(" "),a("li",[t._v("消息是一个过期消息，超时无人消费")]),t._v(" "),a("li",[t._v("要投递的队列消息满了，无法投递")])]),t._v(" "),a("p",[t._v("如果这个包含死信的队列配置了"),a("code",[t._v("dead-letter-exchange")]),t._v("属性，指定了一个交换机，"),a("strong",[t._v("那么队列中的死信就会投递到这个交换机中")]),t._v("，而这个交换机称为"),a("strong",[t._v("死信交换机")]),t._v("（Dead Letter Exchange，检查DLX）。")]),t._v(" "),a("p",[t._v("如图，一个消息被消费者拒绝了，变成了死信：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718174328383.png",alt:"image-20210718174328383"}})]),t._v(" "),a("p",[t._v("因为simple.queue绑定了死信交换机 dl.direct，因此死信会投递给这个交换机：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718174416160.png",alt:"image-20210718174416160"}})]),t._v(" "),a("p",[t._v("如果这个死信交换机也绑定了一个队列，则消息最终会进入这个存放死信的队列：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718174506856.png",alt:"image-20210718174506856"}})]),t._v(" "),a("p",[t._v("另外，队列将死信投递给死信交换机时，必须知道两个信息：")]),t._v(" "),a("ul",[a("li",[t._v("死信交换机名称  "),a("code",[t._v("dead-letter-exchange")])]),t._v(" "),a("li",[t._v("死信交换机与死信队列绑定的RoutingKey"),a("code",[t._v("dead-letter-routing-key")])])]),t._v(" "),a("p",[t._v("这样才能确保投递的消息能到达死信交换机，并且正确的路由到死信队列。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210821073801398.png",alt:"image-20210821073801398"}})]),t._v(" "),a("h4",{attrs:{id:"异常交换机-与-死信交换机对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常交换机-与-死信交换机对比"}},[t._v("#")]),t._v(" 异常交换机 与 死信交换机对比")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("前者是由 消费者投递给异常交换机，后者是由队列投递给死信交换机")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/%E6%AD%BB%E4%BF%A1%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%B8%8E%E5%BC%82%E5%B8%B8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%8C%BA%E5%88%AB.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"利用死信交换机接收死信-拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用死信交换机接收死信-拓展"}},[t._v("#")]),t._v(" 利用死信交换机接收死信（拓展）")]),t._v(" "),a("p",[t._v("在失败重试策略中，默认的RejectAndDontRequeueRecoverer会在本地重试次数耗尽后，发送reject给RabbitMQ，消息变成死信，被丢弃。")]),t._v(" "),a("p",[t._v("我们可以给simple.queue添加一个死信交换机，给死信交换机绑定一个队列。这样消息变成死信后也不会丢弃，而是最终投递到死信交换机，路由到与死信交换机绑定的队列。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718174506856.png",alt:"image-20210718174506856"}})]),t._v(" "),a("p",[t._v("我们在consumer服务中，定义一组死信交换机、死信队列：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//MessageRecoverer的模式采用默认的  RejectAndDontRequeueRecoverer模式，本地重试失败后，丢弃消息，到死信交换机")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明普通的 simple.queue队列，并且为其指定死信交换机：dl.direct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleQueue2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueueBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("durable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定队列名称，并持久化")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deadLetterExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定死信交换机")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deadLetterRoutingKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定死信交换机  RoutingKey")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明死信交换机 dl.direct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明存储死信的队列 dl.queue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将死信队列 与 死信交换机绑定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BindingBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"总结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("什么样的消息会成为死信？")]),t._v(" "),a("ul",[a("li",[t._v("消息被消费者reject或者返回nack")]),t._v(" "),a("li",[t._v("消息超时未消费")]),t._v(" "),a("li",[t._v("队列满了")])]),t._v(" "),a("p",[t._v("死信交换机的使用场景是什么？")]),t._v(" "),a("ul",[a("li",[t._v("如果队列绑定了死信交换机，死信会投递到死信交换机；")]),t._v(" "),a("li",[t._v("可以利用死信交换机收集所有消费者处理失败的消息（死信），交由人工处理，进一步提高消息队列的可靠性。")])]),t._v(" "),a("h3",{attrs:{id:"ttl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ttl"}},[t._v("#")]),t._v(" TTL")]),t._v(" "),a("p",[t._v("一个队列中的消息如果超时未消费，则会变为死信，超时分为两种情况：")]),t._v(" "),a("ul",[a("li",[t._v("消息所在的队列设置了超时时间")]),t._v(" "),a("li",[t._v("消息本身设置了超时时间")]),t._v(" "),a("li",[a("strong",[t._v("当两者都存在时间时，取较短的一个")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718182643311.png",alt:"image-20210718182643311"}})]),t._v(" "),a("h4",{attrs:{id:"接收超时死信的死信交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接收超时死信的死信交换机"}},[t._v("#")]),t._v(" 接收超时死信的死信交换机")]),t._v(" "),a("p",[a("strong",[t._v("原理")])]),t._v(" "),a("blockquote",[a("p",[t._v("TTL的交换机不设置消费者监听，让消息在队列中超时，自动投递到死信交换机中,让消费者监听死信交换机，这样消费者收到生产者的消息就实现了延时。")])]),t._v(" "),a("p",[t._v("在consumer服务的SpringRabbitListener中，定义一个新的消费者，并且声明 死信交换机、死信队列：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RabbitListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bindings "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@QueueBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.ttl.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" durable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    exchange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Exchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.ttl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listenDlQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"接收到 dl.ttl.queue的延迟消息：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"声明一个队列-并且指定ttl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明一个队列-并且指定ttl"}},[t._v("#")]),t._v(" 声明一个队列，并且指定TTL")]),t._v(" "),a("p",[t._v("要给队列设置超时时间，需要在声明队列时配置x-message-ttl属性：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttlQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueueBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("durable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定队列名称，并持久化")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置队列的超时时间，10秒")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deadLetterExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl.ttl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定死信交换机")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deadLetterRoutingKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定死信交换机  RoutingKey")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意，这个队列设定了死信交换机为"),a("code",[t._v("dl.ttl.direct")])]),t._v(" "),a("p",[t._v("声明交换机，将ttl与交换机绑定：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttlExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttlBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BindingBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttlQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttlExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("发送消息，但是不要指定TTL：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testTTLQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, ttl queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消息ID，需要封装到CorrelationData中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),t._v(" correlationData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n    rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("convertAndSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录日志")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发送消息成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("发送消息的日志：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718191657478.png",alt:"image-20210718191657478"}})]),t._v(" "),a("p",[t._v("查看下接收消息的日志：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718191738706.png",alt:"image-20210718191738706"}})]),t._v(" "),a("p",[t._v("因为队列的TTL值是10000ms，也就是10秒。可以看到消息发送与接收之间的时差刚好是10秒。")]),t._v(" "),a("h4",{attrs:{id:"发送消息时-设定ttl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送消息时-设定ttl"}},[t._v("#")]),t._v(" 发送消息时，设定TTL")]),t._v(" "),a("p",[t._v("在发送消息时，也可以指定TTL：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testTTLMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageBuilder")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withBody")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, ttl message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardCharsets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExpiration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消息ID，需要封装到CorrelationData中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),t._v(" correlationData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CorrelationData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n    rabbitTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("convertAndSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl.direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" correlationData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发送消息成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("查看发送消息日志：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718191939140.png",alt:"image-20210718191939140"}})]),t._v(" "),a("p",[t._v("接收消息日志：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718192004662.png",alt:"image-20210718192004662"}})]),t._v(" "),a("p",[a("strong",[t._v("这次，发送与接收的延迟只有5秒。说明当队列、消息都设置了TTL时，任意一个到期就会成为死信。")])]),t._v(" "),a("h4",{attrs:{id:"总结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("消息超时的两种方式是？")]),t._v(" "),a("ul",[a("li",[t._v("给队列设置ttl属性，进入队列后超过ttl时间的消息变为死信")]),t._v(" "),a("li",[t._v("给消息设置ttl属性，队列接收到消息超过ttl时间后变为死信")])]),t._v(" "),a("p",[t._v("如何实现发送一个消息20秒后消费者才收到消息？")]),t._v(" "),a("ul",[a("li",[t._v("给消息的目标队列指定死信交换机")]),t._v(" "),a("li",[t._v("将消费者监听的队列绑定到死信交换机")]),t._v(" "),a("li",[t._v("发送消息时给消息设置超时时间为20秒")])]),t._v(" "),a("h3",{attrs:{id:"延迟队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟队列"}},[t._v("#")]),t._v(" 延迟队列")]),t._v(" "),a("p",[t._v("利用TTL结合死信交换机，我们实现了消息发出后，消费者延迟收到消息的效果。这种消息模式就称为延迟队列（Delay Queue）模式。")]),t._v(" "),a("p",[t._v("延迟队列的使用场景包括：")]),t._v(" "),a("ul",[a("li",[t._v("延迟发送短信")]),t._v(" "),a("li",[t._v("用户下单，如果用户在15 分钟内未支付，则自动取消")]),t._v(" "),a("li",[t._v("预约工作会议，20分钟后自动通知所有参会人员")])]),t._v(" "),a("p",[t._v("因为延迟队列的需求非常多，所以RabbitMQ的官方也推出了一个插件，原生支持延迟队列效果。")]),t._v(" "),a("p",[t._v("这个插件就是DelayExchange插件。参考RabbitMQ的插件列表页面：https://www.rabbitmq.com/community-plugins.html")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718192529342.png",alt:"image-20210718192529342"}})]),t._v(" "),a("p",[t._v("使用方式可以参考官网地址：https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq")]),t._v(" "),a("h4",{attrs:{id:"delayexchange原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delayexchange原理"}},[t._v("#")]),t._v(" DelayExchange原理")]),t._v(" "),a("p",[t._v("DelayExchange需要将一个"),a("strong",[t._v("交换机")]),t._v("声明为delayed类型。当我们发送消息到delayExchange时，流程如下：")]),t._v(" "),a("ul",[a("li",[t._v("接收消息")]),t._v(" "),a("li",[t._v("判断消息是否具备x-delay属性")]),t._v(" "),a("li",[t._v("如果有x-delay属性，说明是延迟消息，持久化到硬盘，读取x-delay值，作为延迟时间")]),t._v(" "),a("li",[t._v("返回routing not found结果给消息发送者")]),t._v(" "),a("li",[t._v("x-delay时间到期后，重新投递消息到指定队列")])]),t._v(" "),a("h4",{attrs:{id:"使用delayexchange"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用delayexchange"}},[t._v("#")]),t._v(" 使用DelayExchange")]),t._v(" "),a("p",[t._v("插件的使用也非常简单：声明一个交换机，交换机的类型可以是任意类型，只需要设定delayed属性为true即可，然后声明队列与其绑定即可。")]),t._v(" "),a("h5",{attrs:{id:"_1-声明delayexchange交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明delayexchange交换机"}},[t._v("#")]),t._v(" 1）声明DelayExchange交换机")]),t._v(" "),a("p",[t._v("基于注解方式（推荐）：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718193747649.png",alt:"image-20210718193747649"}})]),t._v(" "),a("p",[t._v("也可以基于@Bean的方式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718193831076.png",alt:"image-20210718193831076"}})]),t._v(" "),a("h5",{attrs:{id:"_2-发送消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-发送消息"}},[t._v("#")]),t._v(" 2）发送消息")]),t._v(" "),a("p",[t._v("发送消息时，一定要携带x-delay属性，指定延迟的时间：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718193917009.png",alt:"image-20210718193917009"}})]),t._v(" "),a("h4",{attrs:{id:"总结-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-5"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("延迟队列插件的使用步骤包括哪些？")]),t._v(" "),a("p",[t._v("•声明一个交换机，添加delayed属性为true")]),t._v(" "),a("p",[t._v("•发送消息时，添加x-delay头，值为超时时间")]),t._v(" "),a("h2",{attrs:{id:"惰性队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#惰性队列"}},[t._v("#")]),t._v(" 惰性队列")]),t._v(" "),a("h3",{attrs:{id:"消息堆积问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息堆积问题"}},[t._v("#")]),t._v(" 消息堆积问题")]),t._v(" "),a("p",[t._v("当生产者发送消息的速度超过了消费者处理消息的速度，就会导致队列中的消息堆积，直到队列存储消息达到上限。之后发送的消息就会成为死信，可能会被丢弃，这就是消息堆积问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718194040498.png",alt:"image-20210718194040498"}})]),t._v(" "),a("p",[t._v("解决消息堆积有三种思路：")]),t._v(" "),a("ul",[a("li",[t._v("增加更多消费者，提高消费速度。也就是我们之前说的work queue模式")]),t._v(" "),a("li",[t._v("在消费者内开启线程池加快消息处理速度")]),t._v(" "),a("li",[t._v("扩大队列容积，提高堆积上限")])]),t._v(" "),a("p",[t._v("要提升队列容积，把消息保存在内存中显然是不行的。")]),t._v(" "),a("h3",{attrs:{id:"惰性队列-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#惰性队列-2"}},[t._v("#")]),t._v(" 惰性队列")]),t._v(" "),a("p",[t._v("从RabbitMQ的3.6.0版本开始，就增加了Lazy Queues的概念，也就是惰性队列。惰性队列的特征如下：")]),t._v(" "),a("ul",[a("li",[t._v("接收到消息后直接存入磁盘而非内存")]),t._v(" "),a("li",[t._v("消费者要消费消息时才会从磁盘中读取并加载到内存")]),t._v(" "),a("li",[t._v("支持数百万条的消息存储")])]),t._v(" "),a("h4",{attrs:{id:"基于命令行设置lazy-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于命令行设置lazy-queue"}},[t._v("#")]),t._v(" 基于命令行设置lazy-queue")]),t._v(" "),a("p",[t._v("而要设置一个队列为惰性队列，只需要在声明队列时，指定x-queue-mode属性为lazy即可。可以通过命令行将一个运行中的队列修改为惰性队列：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("rabbitmqctl set_policy Lazy "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^lazy-queue$"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"queue-mode":"lazy"}\'')]),t._v(" --apply-to queues  \n")])])]),a("p",[t._v("命令解读：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("rabbitmqctl")]),t._v(" ：RabbitMQ的命令行工具")]),t._v(" "),a("li",[a("code",[t._v("set_policy")]),t._v(" ：添加一个策略")]),t._v(" "),a("li",[a("code",[t._v("Lazy")]),t._v(" ：策略名称，可以自定义")]),t._v(" "),a("li",[a("code",[t._v('"^lazy-queue$"')]),t._v(" ：用正则表达式匹配队列的名字")]),t._v(" "),a("li",[a("code",[t._v('\'{"queue-mode":"lazy"}\'')]),t._v(" ：设置队列模式为lazy模式")]),t._v(" "),a("li",[a("code",[t._v("--apply-to queues")]),t._v("：策略的作用对象，是所有的队列")])]),t._v(" "),a("h4",{attrs:{id:"基于-bean声明lazy-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-bean声明lazy-queue"}},[t._v("#")]),t._v(" 基于@Bean声明lazy-queue")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718194522223.png",alt:"image-20210718194522223"}})]),t._v(" "),a("h4",{attrs:{id:"基于-rabbitlistener声明lazyqueue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-rabbitlistener声明lazyqueue"}},[t._v("#")]),t._v(" 基于@RabbitListener声明LazyQueue")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718194539054.png",alt:"image-20210718194539054"}})]),t._v(" "),a("h4",{attrs:{id:"总结-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-6"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("消息堆积问题的解决方案？")]),t._v(" "),a("ul",[a("li",[t._v("队列上绑定多个消费者，提高消费速度")]),t._v(" "),a("li",[t._v("给消费者开启线程池，提高消费速度")]),t._v(" "),a("li",[t._v("使用惰性队列，可以再mq中保存更多消息")])]),t._v(" "),a("p",[t._v("惰性队列的优点有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("基于磁盘存储，消息上限高")]),t._v(" "),a("li",[t._v("没有间歇性的page-out，性能比较稳定")]),t._v(" "),a("li",[t._v("Lazy 队列\n"),a("ul",[a("li",[t._v("消息直接存到磁盘，当消费者要消费时，才将消息读到磁盘")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/Lazy.png",alt:""}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("普通队列")]),t._v(" "),a("ul",[a("li",[t._v("先往内存中存，内存快满了后，将内存中的数据存到磁盘中，内存在重新接收数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/norm.png",alt:""}})])])]),t._v(" "),a("p",[t._v("惰性队列的缺点有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("基于磁盘存储，消息时效性会降低")]),t._v(" "),a("li",[t._v("性能受限于磁盘的IO")])]),t._v(" "),a("h2",{attrs:{id:"mq集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mq集群"}},[t._v("#")]),t._v(" MQ集群")]),t._v(" "),a("h3",{attrs:{id:"集群分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群分类"}},[t._v("#")]),t._v(" 集群分类")]),t._v(" "),a("p",[t._v("RabbitMQ的是基于Erlang语言编写，而Erlang又是一个面向并发的语言，天然支持集群模式。RabbitMQ的集群有两种模式：")]),t._v(" "),a("p",[t._v("•"),a("strong",[t._v("普通集群")]),t._v("：是一种分布式集群，将队列分散到集群的各个节点，从而提高整个集群的并发能力。")]),t._v(" "),a("p",[t._v("•"),a("strong",[t._v("镜像集群")]),t._v("：是一种主从集群，普通集群的基础上，添加了主从备份功能，提高集群的数据可用性。")]),t._v(" "),a("p",[t._v("镜像集群虽然支持主从，但主从同步并不是强一致的，某些情况下可能有数据丢失的风险。因此在RabbitMQ的3.8版本以后，推出了新的功能："),a("strong",[t._v("仲裁队列")]),t._v("来代替镜像集群，底层采用Raft协议确保主从的数据一致性。")]),t._v(" "),a("h3",{attrs:{id:"普通集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#普通集群"}},[t._v("#")]),t._v(" 普通集群")]),t._v(" "),a("h4",{attrs:{id:"集群结构和特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群结构和特征"}},[t._v("#")]),t._v(" 集群结构和特征")]),t._v(" "),a("p",[t._v("普通集群，或者叫标准集群（classic cluster），具备下列特征：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("会在集群的各个节点间共享部分数据，包括：交换机、队列元信息。不包含队列中的消息。")]),t._v(" "),a("ul",[a("li",[t._v("元信息就是，能看到队列叫啥，在哪等信息")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("当访问集群某节点时，如果队列不在该节点，会从数据所在节点传递到当前节点并返回")])])]),t._v(" "),a("li",[a("p",[t._v("队列所在节点宕机，队列中的消息就会丢失")])])]),t._v(" "),a("p",[t._v("结构如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718220843323.png",alt:"image-20210718220843323"}})]),t._v(" "),a("h3",{attrs:{id:"镜像集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像集群"}},[t._v("#")]),t._v(" 镜像集群")]),t._v(" "),a("h4",{attrs:{id:"集群结构和特征-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群结构和特征-2"}},[t._v("#")]),t._v(" 集群结构和特征")]),t._v(" "),a("p",[t._v("镜像集群：本质是主从模式，具备下面的特征：")]),t._v(" "),a("p",[a("strong",[t._v("类似于 es")])]),t._v(" "),a("ul",[a("li",[t._v("交换机、队列、队列中的消息会在"),a("strong",[t._v("各个mq的镜像节点之间同步备份")]),t._v("。")]),t._v(" "),a("li",[t._v("创建队列的节点被称为该队列的"),a("strong",[t._v("主节点，"),a("strong",[t._v("备份到的其它节点叫做该队列的")]),t._v("镜像")]),t._v("节点。")]),t._v(" "),a("li",[t._v("一个队列的主节点可能是另一个队列的镜像节点")]),t._v(" "),a("li",[t._v("所有操作都是主节点完成，然后同步给镜像节点")]),t._v(" "),a("li",[t._v("主宕机后，镜像节点会替代成新的主")])]),t._v(" "),a("p",[t._v("结构如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/RabbitMQ/image-20210718221039542.png",alt:"image-20210718221039542"}})]),t._v(" "),a("h3",{attrs:{id:"仲裁队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仲裁队列"}},[t._v("#")]),t._v(" 仲裁队列")]),t._v(" "),a("h4",{attrs:{id:"集群特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群特征"}},[t._v("#")]),t._v(" 集群特征")]),t._v(" "),a("p",[t._v("仲裁队列：仲裁队列是3.8版本以后才有的新功能，用来替代镜像队列，具备下列特征：")]),t._v(" "),a("ul",[a("li",[t._v("与镜像队列一样，都是主从模式，支持主从数据同步")]),t._v(" "),a("li",[t._v("使用非常简单，没有复杂的配置")]),t._v(" "),a("li",[a("strong",[t._v("主从同步基于Raft协议，强一致")])])]),t._v(" "),a("h4",{attrs:{id:"java代码创建仲裁队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java代码创建仲裁队列"}},[t._v("#")]),t._v(" Java代码创建仲裁队列")]),t._v(" "),a("p",[a("strong",[t._v("这里除了创建队列时不一样，其他写和监听都一样的")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quorumQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueueBuilder")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("durable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quorum.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 持久化")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quorum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仲裁队列")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"springamqp连接mq集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springamqp连接mq集群"}},[t._v("#")]),t._v(" SpringAMQP连接MQ集群")]),t._v(" "),a("p",[t._v("注意，这里用address来代替host、port方式")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("spring"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  rabbitmq"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    addresses"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".159")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8071")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".159")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8072")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".159")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8073")]),t._v("\n    username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" itcast\n    password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123321")]),t._v("\n    virtual"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),a("h2",{attrs:{id:"总结-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-7"}},[t._v("#")]),t._v(" "),a("strong",[t._v("总结")])]),t._v(" "),a("ul",[a("li",[t._v("四个问题\n"),a("ul",[a("li",[t._v("消息可靠性\n"),a("ul",[a("li",[t._v("生产者消息确认\n"),a("ul",[a("li",[t._v("ReturnCallback")]),t._v(" "),a("li",[t._v("ConfirmCallback")])])]),t._v(" "),a("li",[t._v("消息持久化存储 - durable\n"),a("ul",[a("li",[t._v("默认队列，交换机，消息都是持久化的")])])]),t._v(" "),a("li",[t._v("消费者消息确认\n"),a("ul",[a("li",[t._v("本地重试")]),t._v(" "),a("li",[t._v("失败策略\n"),a("ul",[a("li",[t._v("异常交换机，异常队列")])])])])])])]),t._v(" "),a("li",[t._v("延时消息\n"),a("ul",[a("li",[t._v("死信交换机\n"),a("ul",[a("li",[t._v("死信处理")]),t._v(" "),a("li",[t._v("与异常交换机的区别")])])]),t._v(" "),a("li",[t._v("延迟队列\n"),a("ul",[a("li",[t._v("利用死信交换机完成TTL")])])]),t._v(" "),a("li",[t._v("延迟交换机\n"),a("ul",[a("li",[t._v("安装插件，让交换机临时存储数据，达到延时转发的目的")])])])])]),t._v(" "),a("li",[t._v("消息堆积\n"),a("ul",[a("li",[t._v("解决方法")]),t._v(" "),a("li",[t._v("惰性队列\n"),a("ul",[a("li",[t._v("特性")]),t._v(" "),a("li",[t._v("与普通队列区别")])])])])]),t._v(" "),a("li",[t._v("高可用\n"),a("ul",[a("li",[t._v("普通集群")]),t._v(" "),a("li",[t._v("镜像集群")]),t._v(" "),a("li",[t._v("仲裁队列")])])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);