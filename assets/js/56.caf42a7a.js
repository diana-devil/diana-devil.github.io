(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{395:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Redis提供了哨兵（Sentinel）机制来实现主从集群的自动故障恢复。")]),t._v(" "),s("p",[s("strong",[t._v("此哨兵(Sentinel) 与阿里巴巴的Sentinel的流量监控中间件是两种东西，只是恰巧重名了。")])]),t._v(" "),s("h2",{attrs:{id:"哨兵原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哨兵原理"}},[t._v("#")]),t._v(" 哨兵原理")]),t._v(" "),s("h3",{attrs:{id:"集群结构和作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群结构和作用"}},[t._v("#")]),t._v(" 集群结构和作用")]),t._v(" "),s("p",[t._v("哨兵的结构如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/image-20210725154528072.png",alt:"image-20210725154528072"}})]),t._v(" "),s("p",[t._v("哨兵的作用如下：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("监控")]),t._v("：Sentinel 会不断检查您的master和slave是否按预期工作")]),t._v(" "),s("li",[s("strong",[t._v("自动故障恢复")]),t._v("：如果master故障，Sentinel会将一个slave提升为master。当故障实例恢复后也以新的master为主")]),t._v(" "),s("li",[s("strong",[t._v("通知")]),t._v("：Sentinel充当Redis客户端的服务发现来源，当集群发生故障转移时，会将最新信息推送给Redis的客户端")])]),t._v(" "),s("h3",{attrs:{id:"集群监控原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群监控原理"}},[t._v("#")]),t._v(" 集群监控原理")]),t._v(" "),s("p",[t._v("Sentinel基于心跳机制监测服务状态，每隔1秒向集群的每个实例发送ping命令：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("就相当于投票，多于认为你挂了，你就挂了。")])])]),t._v(" "),s("p",[t._v("•主观下线：如果某sentinel节点发现某实例未在规定时间响应，则认为该实例"),s("strong",[t._v("主观下线")]),t._v("。")]),t._v(" "),s("p",[t._v("•客观下线：若超过指定数量（quorum）的sentinel都认为该实例主观下线，则该实例"),s("strong",[t._v("客观下线")]),t._v("。quorum值最好超过Sentinel实例数量的一半。")]),t._v(" "),s("ul",[s("li",[t._v("客观下线，就表示哨兵认为你下线了。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/image-20210725154632354.png",alt:"image-20210725154632354"}})]),t._v(" "),s("h3",{attrs:{id:"集群故障恢复原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群故障恢复原理"}},[t._v("#")]),t._v(" 集群故障恢复原理")]),t._v(" "),s("p",[t._v("一旦发现master故障，sentinel需要在salve中选择一个作为新的master，选择依据是这样的：")]),t._v(" "),s("ul",[s("li",[t._v("首先会判断slave节点与master节点断开时间长短，如果超过指定值（down-after-milliseconds * 10）则会排除该slave节点")]),t._v(" "),s("li",[t._v("然后判断slave节点的slave-priority值，越小优先级越高，如果是0则永不参与选举")]),t._v(" "),s("li",[s("strong",[t._v("如果slave-prority一样，则判断slave节点的offset值，越大说明数据越新，优先级越高")]),t._v(" "),s("ul",[s("li",[t._v("这里就是看数据完整性，谁的数据更接近主节点的数据，谁当老大。")])])]),t._v(" "),s("li",[t._v("最后是判断slave节点的运行id大小，越小优先级越高。")])]),t._v(" "),s("p",[t._v("当选出一个新的master后，该如何实现切换呢？")]),t._v(" "),s("p",[t._v("流程如下：")]),t._v(" "),s("ul",[s("li",[t._v("sentinel给"),s("strong",[t._v("备选的slave1")]),t._v("节点发送slaveof no one命令，让该节点成为master")]),t._v(" "),s("li",[t._v("sentinel给所有"),s("strong",[t._v("其它slave")]),t._v("发送slaveof 192.168.150.101 7002 命令，让这些slave成为新master的从节点，开始从新的master上同步数据。")]),t._v(" "),s("li",[t._v("最后，sentinel将故障节点标记为slave，当故障节点恢复后会自动成为新的master的slave节点\n"),s("ul",[s("li",[t._v("修改它的配置文件，给它打上奴隶印记，这样恢复启动后，会自动成为slave节点")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/image-20210725154816841.png",alt:"image-20210725154816841"}})]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("Sentinel的三个作用是什么？")]),t._v(" "),s("ul",[s("li",[t._v("监控")]),t._v(" "),s("li",[t._v("故障转移")]),t._v(" "),s("li",[t._v("通知")])]),t._v(" "),s("p",[t._v("Sentinel如何判断一个redis实例是否健康？")]),t._v(" "),s("ul",[s("li",[t._v("每隔1秒发送一次ping命令，如果超过一定时间没有相向则认为是主观下线")]),t._v(" "),s("li",[t._v("如果大多数sentinel都认为实例主观下线，则判定服务下线")])]),t._v(" "),s("p",[t._v("故障转移步骤有哪些？")]),t._v(" "),s("ul",[s("li",[t._v("首先选定一个slave作为新的master，执行slaveof no one")]),t._v(" "),s("li",[t._v("然后让所有节点都执行slaveof 新master")]),t._v(" "),s("li",[t._v("修改故障节点配置，添加slaveof 新master")])]),t._v(" "),s("h2",{attrs:{id:"搭建哨兵集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建哨兵集群"}},[t._v("#")]),t._v(" 搭建哨兵集群")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/pages/ca02f2/"}},[t._v("具体流程")])],1),t._v(" "),s("h2",{attrs:{id:"redistemplate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redistemplate"}},[t._v("#")]),t._v(" RedisTemplate")]),t._v(" "),s("p",[t._v("在Sentinel集群监管下的Redis主从集群，其节点会因为自动故障转移而发生变化，Redis的客户端必须感知这种变化，及时更新连接信息。Spring的RedisTemplate底层利用lettuce实现了节点的感知和自动切换。")]),t._v(" "),s("p",[t._v("下面，我们通过一个测试来实现RedisTemplate集成哨兵机制。")]),t._v(" "),s("h3",{attrs:{id:"引入依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖"}},[t._v("#")]),t._v(" 引入依赖")]),t._v(" "),s("p",[t._v("在项目的pom文件中引入依赖：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"配置redis地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置redis地址"}},[t._v("#")]),t._v(" 配置Redis地址")]),t._v(" "),s("p",[t._v("然后在配置文件application.yml中指定redis的sentinel相关信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("spring"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  redis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    sentinel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      master"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mymaster\n      nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".150")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".101")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27001")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".150")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".101")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27002")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".150")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".101")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27003")]),t._v("\n")])])]),s("h3",{attrs:{id:"配置读写分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置读写分离"}},[t._v("#")]),t._v(" 配置读写分离")]),t._v(" "),s("p",[t._v("在项目的启动类中，添加一个新的bean：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LettuceClientConfigurationBuilderCustomizer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clientConfigurationBuilderCustomizer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" clientConfigurationBuilder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" clientConfigurationBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReadFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REPLICA_PREFERRED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这个bean中配置的就是读写策略，包括四种：")]),t._v(" "),s("ul",[s("li",[t._v("MASTER：从主节点读取")]),t._v(" "),s("li",[t._v("MASTER_PREFERRED：优先从master节点读取，master不可用才读取replica")]),t._v(" "),s("li",[t._v("REPLICA：从slave（replica）节点读取")]),t._v(" "),s("li",[t._v("REPLICA _PREFERRED：优先从slave（replica）节点读取，所有的slave都不可用才读取master")])])])}),[],!1,null,null,null);s.default=n.exports}}]);