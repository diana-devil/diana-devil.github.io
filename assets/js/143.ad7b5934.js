(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{481:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("h2",{attrs:{id:"克制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克制"}},[t._v("#")]),t._v(" 克制")]),t._v(" "),s("p",[t._v("那到底该怎么“克制”呢？我的经验有以下三点。")]),t._v(" "),s("blockquote",[s("p",[t._v("​\t**第⼀，能用普通字符串处理的，坚决⽤普通字符串处理。**字符串处理的速度不见得差，可读性却好上很多。如果要在大段文本中定位所有的 today 或者 tomorrow，用最简单的字符串查找，直接找两遍，明显比 to(day|morrow) 看起来更清楚。")])]),t._v(" "),s("blockquote",[s("p",[t._v("​\t**第⼆，能写注释的正则表达式，⼀定要写注释。**正则表达式的语法非常古老，不够直观，为了便于阅读和维护，如今大部分语言里都可以通过 x 打开注释模式。有了注释，复杂正则表达式的结构也能一目了然。")])]),t._v(" "),s("blockquote",[s("p",[t._v("​\t**第三，能用多个简单正则表达式解决的，⼀定不要苛求用一个复杂的正则表达式。**这里最明显的例子就是输入条件的验证。比如说，常见的密码要求“必须包含数字、小写字母、大写字母、特殊符号中的至少两种，且长度在 8 到 16 之间”。")]),t._v(" "),s("p",[t._v("​\t你当然可以绞尽脑汁用一个正则表达式来验证，但如果放下执念，⽤多个正则表达式分别验证“包含数字”“包含小写字母”“包含大写字母”“包含特殊符号”这四个条件，要求验证成功结果数大于等于 2，再配合一个正则表达式验证长度，这样做也是可行的。虽然看起来繁琐，但可维护性绝对远远强于单个正则表达式。")])]),t._v(" "),s("h2",{attrs:{id:"元字符的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符的分类"}},[t._v("#")]),t._v(" 元字符的分类")]),t._v(" "),s("p",[s("strong",[t._v("所谓元字符就是指 那些 在正则表达式中具有特殊意义的专用字符")]),t._v("，正则就是由一系列的元字符组成")]),t._v(" "),s("h4",{attrs:{id:"特殊单字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊单字符"}},[t._v("#")]),t._v(" 特殊单字符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".")]),t._v("——任意字符(换行除外)")]),t._v(" "),s("li",[s("code",[t._v("\\d")]),t._v("——任意数字                                      "),s("code",[t._v("\\D")]),t._v("——任意非数字")]),t._v(" "),s("li",[s("code",[t._v("\\w")]),t._v("—— 任意字母，数字，下划线           "),s("code",[t._v("\\W")]),t._v("——任意非字母，数字，下划线")]),t._v(" "),s("li",[s("code",[t._v("\\s")]),t._v("——任意空白符                                  "),s("code",[t._v("\\S")]),t._v("——任意非空白字符")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%89%B9%E6%AE%8A%E5%8D%95%E5%AD%97%E7%AC%A6.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"空白符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空白符"}},[t._v("#")]),t._v(" 空白符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\n")]),t._v("——换行符（常用）")]),t._v(" "),s("li",[s("code",[t._v("\\")]),t._v("——里面有一个空格，用来匹配空格")]),t._v(" "),s("li",[s("code",[t._v("\\s")]),t._v("——可以匹配各种空白字符——（常用）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%A9%BA%E7%99%BD%E7%AC%A6.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("英文的星号（*）——0 到多次")])]),t._v(" "),s("li",[s("p",[t._v("加号（+）——1 到多次")])]),t._v(" "),s("li",[s("p",[t._v("问号（?）——0 到 1 次")])]),t._v(" "),s("li",[s("p",[t._v("{m,n}——m 到 n 次")])]),t._v(" "),s("li",[s("p",[t._v("{m}——出现m次")])]),t._v(" "),s("li",[s("p",[t._v("{m,}——至少出现m次(注意后面的逗号)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".*")]),t._v("——会匹配出长度最长的结果——默认贪婪匹配")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".*?")]),t._v("——会匹配出最短的结果——非贪婪匹配")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E9%87%8F%E8%AF%8D.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围"}},[t._v("#")]),t._v(" 范围")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("|")]),t._v("——用来隔开多个正则，表示满足其中任意一个就行（类似于或）")]),t._v(" "),s("li",[s("code",[t._v("[]")]),t._v("——代表多选一，可以表示里面的任意单个元素\n"),s("ul",[s("li",[t._v("[aeiou]——任意元音字符")]),t._v(" "),s("li",[t._v("[a-z]——所有小写字符")]),t._v(" "),s("li",[t._v("[^a-z]——"),s("code",[t._v("^")]),t._v("表示非，表达的是不能是里面的任何单个字符")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E8%8C%83%E5%9B%B4.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[t._v("#")]),t._v(" 断言")]),t._v(" "),s("p",[s("strong",[t._v("正则中提供了一些结构，只用于匹配位置，而不是文本内容本身，这种结构就是断言")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%96%AD%E8%A8%80.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单词边界(Word Bounday)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\b")]),t._v("——表示单词边界")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%8D%95%E8%AF%8D%E8%BE%B9%E7%95%8C.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\btom\\b")]),t._v("——保证只有一个tom")])])]),t._v(" "),s("li",[s("p",[t._v("行的开始/结束(^,$)")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("回车(\\r)和换行(\\n)是两个概念")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("回车&换行")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%9B%9E%E8%BD%A6%E6%8D%A2%E8%A1%8C.webp",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("开始和结束")]),t._v(" "),s("ul",[s("li",[t._v("要求6位数字——"),s("code",[t._v("^\\d{6}$")])])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%BC%80%E5%A7%8B%E7%BB%93%E6%9D%9F.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("多行模式下，"),s("code",[t._v("^")]),t._v(" "),s("code",[t._v("$")]),t._v("可以匹配每一行的开头或者结尾")]),t._v(" "),s("ul",[s("li",[t._v("所以对于输入数据的开头或者结尾使用"),s("code",[t._v("\\A")]),t._v("和"),s("code",[t._v("\\z")]),t._v("(Python)")])])]),t._v(" "),s("li",[s("p",[t._v("解决这个问题还有一种做法，我们可以在使用正则校验前，"),s("strong",[t._v("先判断一下字符串的长度")]),t._v("，如果不满足长度要求，那就不需要再用正则去判断了。")]),t._v(" "),s("ul",[s("li",[t._v("相当于你用正则解决主要的问题，而不是所有问题，这也是前面说的使用正则要克制.")])])])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("环视(Look Around)")]),t._v(" "),s("ul",[s("li",[t._v("环视就是要求匹配部分的前面或后面要满足（或不满足）某种规则，有些地方也称环视为"),s("strong",[t._v("零宽断言")])]),t._v(" "),s("li",[s("strong",[t._v("左尖括号代表看左边，没有尖括号是看右边，感叹号是非的意思。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%8E%AF%E8%A7%86.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("环视与子组\n"),s("ul",[s("li",[t._v("环视中虽然也有括号，但不会保存成子组")]),t._v(" "),s("li",[t._v("保存成子组的一般是匹配到的文本内容，后续用于替换等操作，而环视是表示对文本左右环境的要求，即环视只匹配位置，不匹配文本内容")])])]),t._v(" "),s("li",[t._v("六位邮编\n"),s("ul",[s("li",[t._v("中间6位数字，左边不是数字，右边不是数字")]),t._v(" "),s("li",[s("code",[t._v("(?<!\\d)\\d{6}(?!\\d)")])])])]),t._v(" "),s("li",[t._v("单词边界\n"),s("ul",[s("li",[s("code",[t._v("\\b\\w+\\b")]),t._v("——一个带边界的单词")]),t._v(" "),s("li",[s("code",[t._v("(?<!w)\\w+(?!\\w)")]),t._v("或者"),s("code",[t._v("(?<W)\\w+(?!\\w)")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("某个资源，https://，http://，ftp://")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(https?|ftp):\\/\\/")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("s?")]),t._v("——表示有一个或者没有s——匹配 http和https")]),t._v(" "),s("li",[s("code",[t._v("\\/")]),t._v("——"),s("code",[t._v("\\")]),t._v("表示转义字符，"),s("code",[t._v("\\/")]),t._v("——表示正常的"),s("code",[t._v("/")])])])])])]),t._v(" "),s("li",[s("p",[t._v("正则——手机号——第一版")]),t._v(" "),s("ul",[s("li",[t._v("第 1 位固定为数字 1；")]),t._v(" "),s("li",[t._v("第 2 位可能是 3，4，5，6，7，8，9；")]),t._v(" "),s("li",[t._v("第 3 位到第 11 位我们认为可能是 0-9 任意数字")]),t._v(" "),s("li",[s("code",[t._v("1[3-9][0-9]{9}")])])])]),t._v(" "),s("li",[s("p",[t._v("替换重复出现的单词")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("以前的做法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("the little cat cat is in the hat hat, we like it.")])]),t._v(" "),s("li",[t._v("查找——"),s("code",[t._v("(\\w+)\\s\\1")])]),t._v(" "),s("li",[t._v("替换——"),s("code",[t._v("\\1")])]),t._v(" "),s("li",[t._v("这种做法无法满足")])])]),t._v(" "),s("li",[s("p",[t._v("现在的做法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("the little cat cat2 is in the hat hat2, we like it.")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("cat")]),t._v("与"),s("code",[t._v("cat2")]),t._v("属于不同的单词，但是"),s("code",[t._v("(\\w+)\\s\\1")]),t._v("达不到预计的效果")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E9%94%99%E8%AF%AF%E7%A4%BA%E8%8C%83.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("查找——"),s("code",[t._v("(\\w+)( \\1\\b)+")])]),t._v(" "),s("ul",[s("li",[t._v("严谨点——"),s("code",[t._v("(\\w+)(?:\\s+\\1\\b)+")])]),t._v(" "),s("li",[s("code",[t._v("?:")]),t._v("——不保存子组")]),t._v(" "),s("li",[s("code",[t._v("\\s+")]),t._v("——可以匹配多个空白字符串")])])]),t._v(" "),s("li",[s("p",[t._v("替换——"),s("code",[t._v("\\1")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%8D%95%E8%AF%8D%E6%9B%BF%E6%8D%A2%E7%A4%BA%E4%BE%8B.png",alt:""}})])])])])])])]),t._v(" "),s("h2",{attrs:{id:"正则三种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则三种模式"}},[t._v("#")]),t._v(" 正则三种模式")]),t._v(" "),s("p",[s("strong",[t._v("贪婪匹配，非贪婪匹配，独占模式")])]),t._v(" "),s("h4",{attrs:{id:"贪婪匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配"}},[t._v("#")]),t._v(" 贪婪匹配")]),t._v(" "),s("blockquote",[s("p",[t._v("在正则中，"),s("strong",[t._v("表示次数的量词默认是贪婪的")]),t._v("，在贪婪模式下，会尝试尽可能最大长度去匹配")])]),t._v(" "),s("ul",[s("li",[t._v("在字符串 aaabb 中使用正则 a* 的匹配过程")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/a%E5%8C%B9%E9%85%8D%E8%BF%87%E7%A8%8B.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("a* 在匹配开头的 a 时，"),s("strong",[t._v("会尝试尽量匹配更多的 a")]),t._v("，直到第一个字母 b 不满足要求为止，匹配上三个 a，后面每次匹配时都得到了空字符串。")]),t._v(" "),s("li",[s("strong",[t._v("贪婪模式的特点就是尽可能进行最大长度匹配")])])]),t._v(" "),s("h4",{attrs:{id:"非贪婪匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非贪婪匹配"}},[t._v("#")]),t._v(" 非贪婪匹配")]),t._v(" "),s("blockquote",[s("p",[t._v("那么如何将贪婪模式变成非贪婪模式呢？"),s("em",[s("em",[t._v("我们可以在量词后面加上英文的问号 (?)——a")]),t._v("？")]),t._v("*")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E9%9D%9E%E8%B4%AA%E5%A9%AA%E5%8C%B9%E9%85%8D.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("这次匹配到的结果都是单个的 a，就连每个 a 左边的空字符串也匹配上了。")]),t._v(" "),s("li",[s("strong",[t._v("非贪婪模式会尽可能短地去匹配")])]),t._v(" "),s("li",[t._v("两种模式对比——查找引号字符")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E8%B4%AA%E5%A9%AA%E4%B8%8E%E9%9D%9E%E8%B4%AA%E5%A9%AA%E5%AF%B9%E6%AF%94.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"独占模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#独占模式"}},[t._v("#")]),t._v(" 独占模式")]),t._v(" "),s("blockquote",[s("p",[t._v("​\t不管是贪婪模式，还是非贪婪模式，都需要发生"),s("strong",[t._v("回溯")]),t._v("才能完成相应的功能。")]),t._v(" "),s("p",[t._v("​\t独占模式，它类似贪婪匹配，但匹配过程"),s("strong",[t._v("不会发生回溯")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("贪婪模式（默认）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%9B%9E%E6%BA%AF-%E8%B4%AA%E5%A9%AA.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("非贪婪模式（量词？）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%9B%9E%E6%BA%AF-%E9%9D%9E%E8%B4%AA%E5%A9%AA.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("独占模式（量词+）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E4%B8%8D%E5%9B%9E%E6%BA%AF-%E7%8B%AC%E5%8D%A0.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对比")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%A8%A1%E5%BC%8F%E5%AF%B9%E6%AF%94.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("案例")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("we found “the little cat” is in the hat, we like “the little cat”")])]),t._v(" "),s("li",[t._v("要求，提取出所有单词，引号中的单词（the little cat）看做一个")]),t._v(" "),s("li",[s("code",[t._v("\\w+|“.+?”")]),t._v("——双引号内部 非贪婪模式")]),t._v(" "),s("li",[s("code",[t._v("\\w+|“[\\w\\s]+”")]),t._v("——双引号内部 单词，空白符，一个或多个")]),t._v(" "),s("li",[s("code",[t._v("\\w+|“[^”]+”")]),t._v("——双引号内部，不包含引号的一个或多个字符")])])])]),t._v(" "),s("h2",{attrs:{id:"分组与引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组与引用"}},[t._v("#")]),t._v(" 分组与引用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("案例1")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\d{18}|\\d{15}")])]),t._v(" "),s("ul",[s("li",[t._v("能识别18位或者15位数字")]),t._v(" "),s("li",[t._v("但是当每行数字超过18位后，只能识别18位的")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\d{15}|\\d{18}")])]),t._v(" "),s("ul",[s("li",[t._v("只能识别15位")]),t._v(" "),s("li",[t._v("因为18位中包含15位，且"),s("strong",[t._v("在大多数正则实现中，多分支选择都是左边的优先")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\d{15}(\\d{3})?")])]),t._v(" "),s("ul",[s("li",[t._v("前面表示15位，后面括号作为一个整体，加问号表示0个或者1个")]),t._v(" "),s("li",[t._v("由多个元字符组成某个部分，应该被看成一个整体的时候，可以用"),s("strong",[t._v("括号括起来表示一个整体")]),t._v("，这是括号的一个重要功能")]),t._v(" "),s("li",[s("strong",[t._v("其实用括号括起来还有另外一个作用，那就是“复用”")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"分组与编号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组与编号"}},[t._v("#")]),t._v(" 分组与编号")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("子组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("保存子组(默认)")]),t._v(" "),s("ul",[s("li",[t._v("用括号括起来的部分 子表达式  会被保存成一个子组")]),t._v(" "),s("li",[t._v("默认情况下，子组会被保存，并分配编号")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%88%86%E7%BB%84%E4%B8%8E%E7%BC%96%E5%8F%B7.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("不保存子组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("你可能只想用括号将某些部分看成一个整体，后续不用再用它。这时我们可以使用"),s("code",[t._v("(?:)")]),t._v(" 不保存子组。")])]),t._v(" "),s("li",[s("p",[t._v("不保存子组可以理解为，括号只用于归组，把某个部分当成“单个元素”，不分配编号，后面不会再进行这部分的引用。")])]),t._v(" "),s("li",[s("p",[t._v("不保存子组，性能会比较高。")])])])]),t._v(" "),s("li",[s("p",[t._v("区别")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%8C%BA%E5%88%AB.png",alt:""}})])])])])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[s("p",[t._v("括号嵌套查找编号")]),t._v(" "),s("ul",[s("li",[t._v("对嵌套的括号查询-编号——"),s("strong",[t._v("数左边开括号的个数即可")]),s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%8B%AC%E5%8F%B7%E5%B5%8C%E5%A5%97%E6%9F%A5%E7%BC%96%E5%8F%B7.png",alt:""}})])])]),t._v(" "),s("li",[s("p",[t._v("命名分组")]),t._v(" "),s("ul",[s("li",[t._v("一些编程语言提供了命名分组（named grouping），这样和数字相比更容易辨识，不容易出错。命名分组的格式为"),s("code",[t._v("(?P<分组名>正则)")]),t._v("。")])])])]),t._v(" "),s("h4",{attrs:{id:"分组引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组引用"}},[t._v("#")]),t._v(" 分组引用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("各编程语言")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\num")]),t._v("——"),s("code",[t._v("\\1")]),t._v("(1为分组编号)——")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$1")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%88%86%E7%BB%84%E7%BC%96%E5%8F%B7.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("分组引用在查找和替换中使用")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("(\\w+) \\1")]),t._v("——（中间有空格）"),s("code",[t._v("\\w+")]),t._v("表示一个单词，"),s("code",[t._v("(\\w+)\\1")]),t._v("表示引用分组的第一个")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("(\\w+)\\s\\1")]),t._v("——空格尽量用 "),s("code",[t._v("\\s")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%9B%BF%E6%8D%A2%E5%88%86%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA.png",alt:""}})])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\1")]),t._v("表示第一个分组，即 "),s("code",[t._v("((\\d{4})-(\\d{2})-(\\d{2}))")]),t._v("="),s("code",[t._v("2020-05-10")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\2")]),t._v("表示第二个分组，即 "),s("code",[t._v("(\\d{4})")]),t._v("="),s("code",[t._v("2020")])])]),t._v(" "),s("li",[s("p",[t._v("在替换的时候，引用"),s("code",[t._v("\\1")]),t._v(",表示引用"),s("code",[t._v("2020-05-10")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%97%B6%E9%97%B4%E6%9B%BF%E6%8D%A2.png",alt:""}})])])])])])])]),t._v(" "),s("h4",{attrs:{id:"子组引用-重要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子组引用-重要"}},[t._v("#")]),t._v(" 子组引用(*重要*)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\d(\\d){2}")]),t._v("——"),s("code",[t._v("\\d(\\d)+")]),t._v("——120\n"),s("ul",[s("li",[t._v("此时正则保存了一个子组，即"),s("code",[t._v("\\1")]),t._v("="),s("code",[t._v("0")])]),t._v(" "),s("li",[t._v("这种"),s("code",[t._v("()量词")]),t._v("的情况 只保留最后一个作为子组")])])]),t._v(" "),s("li",[s("code",[t._v("\\d(\\d)(\\d)")]),t._v("——120\n"),s("ul",[s("li",[t._v("此时正则保存了两个子组，即"),s("code",[t._v("\\1")]),t._v("="),s("code",[t._v("2")]),t._v("  && "),s("code",[t._v("\\2")]),t._v("="),s("code",[t._v("0")])])])]),t._v(" "),s("li",[s("code",[t._v("\\d(\\d{2})")]),t._v("——"),s("code",[t._v("\\d(\\d+)")]),t._v("——120\n"),s("ul",[s("li",[t._v("此时正则保存了一个子组，即"),s("code",[t._v("\\1")]),t._v("="),s("code",[t._v("20")])]),t._v(" "),s("li",[t._v("这种"),s("code",[t._v("(量词)")]),t._v("，量词在括号里面的情况，整个括号表示一个整体，即一个子组")])])]),t._v(" "),s("li",[s("code",[t._v("(\\w+)\\s\\1")]),t._v("——"),s("code",[t._v("cat cat")]),t._v(" "),s("ul",[s("li",[t._v("第一个cat为子组1,后面的"),s("code",[t._v("\\1")]),t._v("表示引用之前的子组cat")]),t._v(" "),s("li",[t._v("这样即可表示 前后两个单词相同，即可表示 重复单词")])])]),t._v(" "),s("li",[s("code",[t._v("((\\w+)\\s\\2)")]),t._v("——"),s("code",[t._v("cat cat")]),t._v(" "),s("ul",[s("li",[t._v("第一个子组为 cat cat ,第二个子组为第一个 cat")]),t._v(" "),s("li",[s("code",[t._v("\\2")]),t._v(" 表示引用 第二个子组即第一个cat，这样也可以匹配上 重复单词")])])]),t._v(" "),s("li",[s("code",[t._v("([a-z]+)(\\d)\\s\\2")]),t._v("——"),s("code",[t._v("cat2 2")]),t._v(" "),s("ul",[s("li",[t._v("第一个子组为 cat， 因为"),s("code",[t._v("+")]),t._v("在括号里面")]),t._v(" "),s("li",[t._v("第二个子组是2， "),s("code",[t._v("\\2")]),t._v("表示引用第二个子组，即"),s("code",[t._v("2")]),t._v(",所有可以匹配上重复的字符2")])])]),t._v(" "),s("li",[s("code",[t._v("(\\w+)(\\s\\1)+")]),t._v("——"),s("code",[t._v("cat cat")]),t._v("或者"),s("code",[t._v("cat cat cat")]),t._v("或者"),s("code",[t._v("cat cat cat cat")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一个子组为第一个 cat")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\1")]),t._v("表示引用第一个子组，即引用 cat")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("+")]),t._v("表示一个或多个，再次引用第一个子组 cat，这样就可以表示 匹配到多个重复的单词")])]),t._v(" "),s("li",[s("p",[t._v("示例")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"/assets/实用工具/正则表达式/替换示例.png"}}),t._v(" "),s("ul",[s("li",[s("p",[t._v("查找")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(\\w+)(\\s\\1)+")])])])]),t._v(" "),s("li",[s("p",[t._v("替换")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\1")])])])])])])])])]),t._v(" "),s("h2",{attrs:{id:"匹配模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配模式"}},[t._v("#")]),t._v(" 匹配模式")]),t._v(" "),s("p",[s("strong",[t._v("模式--mode")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("模式修饰符——"),s("code",[t._v("(?模式标识)")])]),t._v(" "),s("ul",[s("li",[t._v("不区分大小写——"),s("code",[t._v("(?i)")]),t._v("——Insensitive首字母的小写")]),t._v(" "),s("li",[t._v("点号通配模式——"),s("code",[t._v("(?s)")]),t._v("——Single")]),t._v(" "),s("li",[t._v("多行匹配模式——"),s("code",[t._v("(?m)")]),t._v("——Multiline")]),t._v(" "),s("li",[t._v("注释模式——"),s("code",[t._v("(?#)")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F.webp",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"不区分大小写模式-case-insensitive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不区分大小写模式-case-insensitive"}},[t._v("#")]),t._v(" 不区分大小写模式（case-Insensitive）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("找出所有cat，不区分大小写")]),t._v(" "),s("ul",[s("li",[t._v("CAT=CAt=Cat=cat=cAt=cAT=cAt=caT")]),t._v(" "),s("li",[s("code",[t._v("[Cc][Aa][Tt]")]),t._v("——笨方法")]),t._v(" "),s("li",[s("code",[t._v("(?i)cat")])])])]),t._v(" "),s("li",[s("p",[t._v("匹配两个连续出现的cat，不区分大小写")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(?i)(cat)\\s\\1")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E4%B8%8D%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F%E5%86%991.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("不区分大小写，匹配两个连续出现的cat，且第一次和第二次大小写一致")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("((?i)cat) \\1")])]),t._v(" "),s("li",[t._v("用一个大括号包裹起来，表示不区分大小写只作用于这个括号里的内容")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E4%B8%8D%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F%E5%86%992.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("部分区分大小写——the cat 中  the不区分，cat区分")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("((?i)the) cat")])]),t._v(" "),s("li",[t._v("让模式修饰符"),s("code",[t._v("(?i)")]),t._v("只作用于"),s("code",[t._v("the")]),t._v(",而不作用于"),s("code",[t._v("cat")])]),t._v(" "),s("li",[t._v("如果不加括号，默认是两个都会被作用（即作用于整个正则），加了括号，相当于加了限定条件，只作用于"),s("code",[t._v("the")])])])]),t._v(" "),s("li",[s("p",[t._v("总结")]),t._v(" "),s("ul",[s("li",[t._v("不区分大小写模式的指定方式，使用模式修饰符 (?i)；")]),t._v(" "),s("li",[t._v("修饰符如果在括号内，作用范围是这个括号内的正则，而不是整个正则；")]),t._v(" "),s("li",[t._v("使用编程语言时可以使用预定义好的常量来指定匹配模式。")])])])]),t._v(" "),s("h4",{attrs:{id:"点号通配模式-single"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点号通配模式-single"}},[t._v("#")]),t._v(" 点号通配模式（Single）")]),t._v(" "),s("p",[s("strong",[t._v("也叫单行匹配模式，但是和多行匹配模式没有关系")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".")]),t._v("——可以匹配"),s("strong",[t._v("除了换行")]),t._v("之外的任何字符")]),t._v(" "),s("li",[s("code",[t._v("(?s).")]),t._v("——可以匹配"),s("strong",[t._v("包括换行")]),t._v("在内的任何字符")])]),t._v(" "),s("h4",{attrs:{id:"多行匹配模式-multiline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多行匹配模式-multiline"}},[t._v("#")]),t._v(" 多行匹配模式（Multiline）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("默认")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("^")]),t._v("——匹配"),s("strong",[t._v("整个字符串")]),t._v("的开头")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$")]),t._v("——匹配"),s("strong",[t._v("整个字符串")]),t._v("的结尾")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E9%BB%98%E8%AE%A4%E5%8C%B9%E9%85%8D.png",alt:""}})])]),t._v(" "),s("li",[s("p",[s("code",[t._v("(?m)")]),t._v("——多行匹配模式")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("^")]),t._v("——匹配"),s("strong",[t._v("每行")]),t._v("的开头")]),t._v(" "),s("li",[s("code",[t._v("$")]),t._v("——匹配"),s("strong",[t._v("每行")]),t._v("的结尾")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%A4%9A%E8%A1%8C%E5%8C%B9%E9%85%8D.png",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"注释模式-comment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释模式-comment"}},[t._v("#")]),t._v(" 注释模式（Comment）")]),t._v(" "),s("ul",[s("li",[t._v("正则表达式很复杂，可以在正则表达式内部加入注释")]),t._v(" "),s("li",[s("code",[t._v("(?#)")])]),t._v(" "),s("li",[s("code",[t._v("(\\w+)(?#word)\\s\\1(?#word repeat again)")])])]),t._v(" "),s("h4",{attrs:{id:"示例-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HTML 标签是不区分大小写的，比如我们要提取网页中的 head 标签中的内容，用正则如何实现呢？")])]),t._v(" "),s("li",[s("blockquote",[s("Head",{attrs:{id:"diana"}},[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(' <meta charset="utf-8">\n')])])])])],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("(?si)<head.*?>.*<\\/head>")])])])]),t._v(" "),s("h2",{attrs:{id:"转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义"}},[t._v("#")]),t._v(" 转义")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E8%BD%AC%E4%B9%89.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("常用转义字符")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%B8%B8%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"字符串转义和正则转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串转义和正则转义"}},[t._v("#")]),t._v(" 字符串转义和正则转义")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("正则中：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\d")]),t._v("——表示单个数字")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\\\d")]),t._v("——表示"),s("code",[t._v("\\d")]),t._v("——"),s("code",[t._v("\\\\")]),t._v("表示真正的反斜杠")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\\\|d")]),t._v("——表示"),s("code",[t._v("\\")]),t._v("或者"),s("code",[t._v("d")])])])])]),t._v(" "),s("li",[s("p",[t._v("程序中：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\\\\\\\")]),t._v("——"),s("code",[t._v("\\")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("四个反斜杠表示一个反斜杠")])]),t._v(" "),s("li",[s("p",[t._v("因为先经过字符串转义"),s("code",[t._v("\\\\\\\\")]),t._v("——"),s("code",[t._v("\\\\")]),t._v(",真正被读入正则的只有"),s("code",[t._v("\\\\")])])]),t._v(" "),s("li",[s("p",[t._v("然后，正则转义"),s("code",[t._v("\\\\")]),t._v("——"),s("code",[t._v("\\")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%8F%8D%E6%96%9C%E6%9D%A0%E8%BD%AC%E4%B9%89.webp",alt:""}})])])])]),t._v(" "),s("li",[s("p",[t._v("python中，可以使用原生字符串的方式来避免出现上面的情况")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a*b+c?\\\\d123d\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 第一个\\表示转义字符，第二个反斜杠表示真正的反斜杠\n\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a*b+c?\\\\d123d\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("r表示读入原生字符\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"元字符的转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符的转义"}},[t._v("#")]),t._v(" 元字符的转义")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("一般转义(直接在前面加"),s("code",[t._v("\\")]),t._v("即可)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\*")]),t._v("——"),s("code",[t._v("*")])]),t._v(" "),s("li",[s("code",[t._v("\\+")]),t._v("——"),s("code",[t._v("+")])]),t._v(" "),s("li",[s("code",[t._v("\\?")]),t._v("——"),s("code",[t._v("?")])]),t._v(" "),s("li",[s("code",[t._v("\\-")]),t._v("——-``")]),t._v(" "),s("li",[s("code",[t._v("\\^")]),t._v("——"),s("code",[t._v("^")])]),t._v(" "),s("li",[s("code",[t._v("\\$")]),t._v("——"),s("code",[t._v("$")])]),t._v(" "),s("li",[s("code",[t._v("\\|")]),t._v("——"),s("code",[t._v("|")])])])]),t._v(" "),s("li",[s("p",[t._v("括号的转义")]),t._v(" "),s("ul",[s("li",[t._v("方括号 [] 和 花括号 {} 只需转义开括号")]),t._v(" "),s("li",[t._v("圆括号 () 两个都要转义")])]),t._v(" "),s("div",{staticClass:"language-pyt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(">>> import re\n>>> re.findall('\\(\\)\\[]\\{}', '()[]{}')\n['()[]{}']\n>>> re.findall('\\(\\)\\[\\]\\{\\}', '()[]{}')  # 方括号和花括号都转义也可以\n['()[]{}']\n")])])])]),t._v(" "),s("li",[s("p",[t._v("转义函数")]),t._v(" "),s("ul",[s("li",[t._v("使用转义函数可以将整个文本转义，将整个文本看做是一个正常的字符串，将其中的特殊字符加上转义。")])]),t._v(" "),s("div",{staticClass:"language-pyt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(">>> import re\n>>> re.escape('\\d')  # 反斜杠和字母d转义\n'\\\\\\\\d'\n>>> re.findall(re.escape('\\d'), '\\d')\n['\\\\d']\n\n>>> re.escape('[+]')  # 中括号和加号\n'\\\\[\\\\+\\\\]'\n>>> re.findall(re.escape('[+]'), '[+]')\n['[+]']\n")])])]),s("ul",[s("li",[t._v("其他编程语言的函数")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E8%BD%AC%E4%B9%89%E5%87%BD%E6%95%B0.webp",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"字符组中的转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符组中的转义"}},[t._v("#")]),t._v(" 字符组中的转义")]),t._v(" "),s("p",[s("strong",[t._v("在字符组里只有三种情况需要转义")])]),t._v(" "),s("ul",[s("li",[t._v("脱字符"),s("code",[t._v("^")]),t._v("在中括号中，且在第一个位置需要转义\n"),s("ul",[s("li",[t._v("转义前代表非")]),t._v(" "),s("li",[t._v("转义后代表普通字符")])])])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[^ab]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 转义前代表"非"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[\\^ab]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转义后代表普通字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("中划线"),s("code",[t._v("-")]),t._v("在中括号中，且不在首尾位置\n"),s("ul",[s("li",[t._v("在开头或者结尾不需要转义")]),t._v(" "),s("li",[t._v("在中间\n"),s("ul",[s("li",[t._v("转义前表示范围")]),t._v(" "),s("li",[t._v("转义后表示普通字符")])])])])])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[a-c]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 中划线在中间，代表"范围"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[a\\-c]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 中划线在中间，转义后的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[-ac]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在开头，不需要转义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[ac-]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在结尾，不需要转义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("右括号"),s("code",[t._v("]")]),t._v("在中括号中，且不在首位\n"),s("ul",[s("li",[t._v("在首位不需要转义，表示普通字符")]),t._v(" "),s("li",[t._v("不在首位，需要转义，不然"),s("code",[t._v("[]")]),t._v("会被认为提前结束")])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[]ab]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 右括号不转义，在首位")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[a]b]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 右括号不转义，不在首位")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配不上，因为含义是 a后面跟上b]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[a\\]b]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']ab'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转义后代表普通字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("其他字符，无需转义")])]),t._v(" "),s("ul",[s("li",[t._v("[]内部，"),s("code",[t._v("+")]),t._v(","),s("code",[t._v("*")]),t._v(","),s("code",[t._v("?")]),t._v(","),s("code",[t._v(".")]),t._v(","),s("code",[t._v("()")]),t._v("等不需要转义，就代表原来的字符.")]),t._v(" "),s("li",[t._v("但如果在中括号中出现"),s("code",[t._v("\\d")]),t._v("或"),s("code",[t._v("\\w")]),t._v(" 等符号时，他们还是元字符本身的含义。\n"),s("ul",[s("li",[t._v("\\d=数字——\\w=字符")])])])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[.*+?()]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[.*+?()]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单个长度的元字符 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[\\d]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d12\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\w，\\d等在中括号中还是元字符的功能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配上了数字，而不是反斜杠\\和字母d")]),t._v("\n")])])]),s("h4",{attrs:{id:"示例-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-3"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\\\n\\n\\\\")]),t._v("——换行符"),s("code",[t._v("\\n")]),t._v(",用△表示")]),t._v(" "),s("li",[t._v("即"),s("code",[t._v("\\\\ n \\n \\\\")]),t._v("——>字符串转义"),s("code",[t._v("\\n△\\")])]),t._v(" "),s("li",[t._v("输入字符串——字符串转义——正则转义\n"),s("ul",[s("li",[s("code",[t._v("\\n")]),t._v("——>"),s("code",[t._v("△")]),t._v("——>"),s("code",[t._v("△")]),t._v("=换行符")]),t._v(" "),s("li",[s("code",[t._v("\\\\n")]),t._v("——>"),s("code",[t._v("\\n")]),t._v("——>"),s("code",[t._v("△")]),t._v("=换行符")]),t._v(" "),s("li",[s("code",[t._v("\\\\\\n")]),t._v("——>"),s("code",[t._v("\\△")]),t._v("——>"),s("code",[t._v("△")]),t._v("=换行符")]),t._v(" "),s("li",[s("code",[t._v("\\\\\\\\n")]),t._v("——>"),s("code",[t._v("\\\\n")]),t._v("——>"),s("code",[t._v("\\n")]),t._v("=反斜杠+n")])])])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n\\n\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到了换行符")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n\\n\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("输入`\\n`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("匹配到`\\n`\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到了换行符")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n\\n\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("输入`\\△`，\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到了换行符")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\\\\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n\\n\\\\'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到了反斜杠和字母n")]),t._v("\n")])])]),s("h2",{attrs:{id:"正则流派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则流派"}},[t._v("#")]),t._v(" 正则流派")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E6%B5%81%E6%B4%BE.webp",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"posix-流派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#posix-流派"}},[t._v("#")]),t._v(" POSIX 流派")]),t._v(" "),s("ul",[s("li",[t._v("BRE\n"),s("ul",[s("li",[t._v("GNU BRE 只有一个 E，使用时“花圆问管加”("),s("code",[t._v("{}()?|+")]),t._v(")时都要转义")]),t._v(" "),s("li",[t._v("早期标准，BRE不支持 "),s("code",[t._v("?")]),t._v(" "),s("code",[t._v("+")]),t._v(" "),s("code",[t._v("|")])]),t._v(" "),s("li",[t._v("GNU BRE 支持，但是需要加转义字符，即,"),s("code",[t._v("\\?")]),t._v(" "),s("code",[t._v("\\+")]),t._v(" "),s("code",[t._v("\\|")])])])]),t._v(" "),s("li",[t._v("ERE\n"),s("ul",[s("li",[t._v("GNU ERE 名称中有两个 E，不需要再转义")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/BRE-ERE.webp",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"pcre-流派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pcre-流派"}},[t._v("#")]),t._v(" PCRE 流派")]),t._v(" "),s("ul",[s("li",[t._v("来源于 "),s("code",[t._v("Prel")]),t._v("分支\n"),s("ul",[s("li",[t._v("这个流派显著特征是有\\d、\\w、\\s 这类字符fin组简记方式")])])]),t._v(" "),s("li",[t._v("现在大部分编程语言支持的都是这个流派")])]),t._v(" "),s("h4",{attrs:{id:"linux中使用正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux中使用正则"}},[t._v("#")]),t._v(" Linux中使用正则")]),t._v(" "),s("ul",[s("li",[t._v("按照 BRE 标准 实现的有 "),s("strong",[t._v("grep、sed 和 vi/vim")]),t._v(" 等")]),t._v(" "),s("li",[t._v("按照 ERE 标准 实现的有 "),s("strong",[t._v("egrep、awk")]),t._v(" 等")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/Linux%E6%B5%81%E6%B4%BE.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("可以使用 "),s("code",[t._v("man grep")]),t._v("来查看支持那些标准")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/man-grep.webp",alt:""}})])]),t._v(" "),s("li",[s("p",[s("code",[t._v("grep")]),t._v("默认是 BRE流派")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("egrep")]),t._v("="),s("code",[t._v("grep -E")]),t._v(",是ERE流派")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("grep -P")]),t._v("是PCRE 流派")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/Liunx%E4%B8%8B%E6%9F%A5%E6%89%BE.png",alt:""}})])])]),t._v(" "),s("h2",{attrs:{id:"正则应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则应用"}},[t._v("#")]),t._v(" 正则应用")]),t._v(" "),s("h4",{attrs:{id:"正则处理unicode编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则处理unicode编码"}},[t._v("#")]),t._v(" 正则处理Unicode编码")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/Unicode%E6%AD%A3%E5%88%99.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\w")]),t._v("——不能匹配汉字")])]),t._v(" "),s("li",[s("p",[t._v("量词正常使用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("'极客{3}'")])]),t._v(" "),s("ul",[s("li",[t._v("匹配"),s("code",[t._v("极客客客")])]),t._v(" "),s("li",[t._v("表示的是客这个汉字重复3次，而不是客这个汉字对应的编码最后一个字节重复3次")]),t._v(" "),s("li",[t._v("如果重复是最后一个字节，应该"),s("code",[t._v("极(?:客){3}")]),t._v("——分组的形式")])])])]),t._v(" "),s("h4",{attrs:{id:"在编辑器中使用正则-sublime-text"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在编辑器中使用正则-sublime-text"}},[t._v("#")]),t._v(" 在编辑器中使用正则（Sublime Text）")]),t._v(" "),s("ul",[s("li",[t._v("Sublime 的一些快捷键\n"),s("ul",[s("li",[s("code",[t._v("shift")]),t._v("+"),s("code",[t._v("alt")]),t._v("+"),s("code",[t._v("1-9")]),t._v("(非小键盘)\n"),s("ul",[s("li",[t._v("使屏幕显示相等数字的小窗口")])])]),t._v(" "),s("li",[s("code",[t._v("ctrl")]),t._v("+"),s("code",[t._v("h")]),t._v("——替换")]),t._v(" "),s("li",[s("code",[t._v("Ctrl+L")]),t._v("——选择整行")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%BC%96%E8%BE%91%E5%99%A8%E5%A4%84%E7%90%86%E6%96%87%E6%9C%AC.webp",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%BE%91%E5%99%A8.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("光标移动和文本选择")]),t._v(" "),s("ul",[s("li",[t._v("按住"),s("code",[t._v("shift")]),t._v("键选中，然后按左右键可以左右选择文本块")]),t._v(" "),s("li",[t._v("按住"),s("code",[t._v("shift")]),t._v("+"),s("code",[t._v("alt")]),t._v("，"),s("strong",[t._v("光标可以按块移动，快速移动到下一个单词")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[t._v("多焦点编辑")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("查找——>快速查找全部")])]),t._v(" "),s("li",[s("p",[t._v("例子：提取JSON中的姓名和手机号")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"error_code"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"result"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"朱小明"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tel"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"138xx138000"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王五"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tel"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"139xx139000"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n朱小明\n138xx138000\n王五\n139xx139000\n\n")])])]),s("ul",[s("li",[t._v("选中"),s("code",[t._v('": "')]),t._v(",快速查找全部")]),t._v(" "),s("li",[t._v("按右方向键，将光标移动到引号右边")]),t._v(" "),s("li",[t._v("按住"),s("code",[t._v("shift")]),t._v("+"),s("code",[t._v("alt")]),t._v("，快速选择整个引号内的内容")]),t._v(" "),s("li",[t._v("复制，粘贴即可")])])])])]),t._v(" "),s("li",[s("p",[t._v("竖向编辑")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("shift")]),t._v("+鼠标右键,可同时操作处于同一列的文本，同时编辑")]),t._v(" "),s("li",[s("code",[t._v("ctrl")]),t._v("+鼠标左键，可以选中多处文本，同时编辑。")])])]),t._v(" "),s("li",[s("p",[t._v("内容提取")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\S+@\\S+\\.\\S+(?=;)")]),t._v("——简单邮箱提取")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\S")]),t._v("——任意非空白字符")]),t._v(" "),s("li",[s("code",[t._v("(?=;)")]),t._v("——环视"),s("code",[t._v(";")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("小李： jkmkqhvrc@265.com;\n小王： atvl@sogou@.com;\n小红： vtoispm@tom.com;\n小真： olncckkerlikb@citiz.com;\n小爱： mddbatlosa@msn.com;\n\njkmkqhvrc@265.com\natvl@sogou@.com\nvtoispm@tom.com\nolncckkerlikb@citiz.com\nmddbatlosa@msn.com\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("内容替换")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("(\\S+@(\\S+)\\.\\S+)")]),t._v("==查找")]),t._v(" "),s("ul",[s("li",[t._v("两个括号，两个分组，均可以用来引用\n"),s("ul",[s("li",[s("code",[t._v("\\1")]),t._v("="),s("code",[t._v("jkmkqhvrc@265.com")])]),t._v(" "),s("li",[s("code",[t._v("\\2")]),t._v("="),s("code",[t._v("265")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("\\2邮箱 ===\\1")]),t._v("==替换")])]),t._v(" "),s("li",[s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("jkmkqhvrc@265.com\natvl@sogou@.com\nvtoispm@tom.com\nolncckkerlikb@citiz.com\nmddbatlosa@msn.com\n\n265邮箱 ===jkmkqhvrc@265.com\nsogou@邮箱 ===atvl@sogou@.com\ntom邮箱 ===vtoispm@tom.com\ncitiz邮箱 ===olncckkerlikb@citiz.com\nmsn邮箱 ===mddbatlosa@msn.com\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("统计一篇英文文章中每个单词出现的次数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("处理成一行一个单词")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("\\W")]),t._v("——"),s("code",[t._v("\\n")])])]),t._v(" "),s("li",[s("p",[t._v("将非字符转换成空格")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("(?<!\\w)\\s")]),t._v("——``")]),t._v(" "),s("ul",[s("li",[t._v("将左边不是字符的空格去掉")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("I have a cat, cat is a dog, dog is I cat.\n\n\nI\nhave\na\ncat\n\ncat\nis\na\ndog\n\ndog\nis\nI\ncat\n\n\nI\nhave\na\ncat\ncat\nis\na\ndog\ndog\nis\nI\ncat\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("使用sort 命令排序，uniq -c统计次数")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("uniq -c：   统计每行出现次数\nsort :\n\t-n  按数字排序\n\t-r\t逆序排序\n\t-k1\t根据-t的分割，分成几域，取第1个域排序\n\t-t  指定分隔符，默认的分隔符为空白字符和非空白字符之间的空字符\nhead -n10： 取前10行数据\n")])])]),s("div",{staticClass:"language-linux extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sort word.txt | uniq -c\n      2 I\n      2 a\n      3 cat\n      2 dog\n      1 have\n      2 is\n\n$ sort word.txt | uniq -c | sort -nr\n      3 cat\n      2 is\n      2 dog\n      2 a\n      2 I\n      1 have\n\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"在语言中用正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在语言中用正则"}},[t._v("#")]),t._v(" 在语言中用正则")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("校验")]),t._v(" "),s("p",[s("strong",[t._v("验证日期  2022-06-01")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("python")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试环境 Python3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\d{4}-\\d{2}-\\d{2}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Match "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06-01'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个输出是匹配到了，范围是从下标0到下标10，匹配结果是2020-06-01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# re.search 输出结果也是类似的")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("\\A")]),t._v(" "),s("code",[t._v("\\Z")]),t._v("表示文本的开头和结尾")]),t._v(" "),s("li",[t._v("不建议使用"),s("code",[t._v("^")]),t._v("和"),s("code",[t._v("$")]),t._v(",因为在多行模式下，可以表示每行的开头和结尾")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试环境 Python3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\A\\d{4}-\\d{2}-\\d{2}\\Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建议先编译，提高效率")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用match时\\A可省略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("java")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\A")]),t._v(" "),s("code",[t._v("\\z")]),t._v("表示文本的开头和结尾")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法1，可以不加 \\A 和 \\z")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d{4}-\\\\d{2}-\\\\d{2}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法2，可以不加 \\A 和 \\z")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d{4}-\\\\d{2}-\\\\d{2}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法3，必须加上 \\A 和 \\z")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\A\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("提取")]),t._v(" "),s("p",[s("strong",[t._v("日志时间提取")])]),t._v(" "),s("ul",[s("li",[t._v("python")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没有子组时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\d{4}-\\d{2}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-05 2020-06'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-05'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有子组时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'(\\d{4})-(\\d{2})'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-05 2020-06'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'05'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'06'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("节约内存，使用迭代器")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'(\\d{4})-(\\d{2})'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finditer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-05 2020-06'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date: '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 整个正则匹配到的内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'year: '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个子组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'month:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二个子组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ndate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("05")]),t._v("\nyear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("\nmonth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("05")]),t._v("\ndate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),t._v("\nyear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("\nmonth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("java")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d{4}-\\\\d{2}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" match "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06 2020-07"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("替换")]),t._v(" "),s("p",[s("strong",[t._v("(02-20-2022)月日年——年月日(2022年02月20日)")])]),t._v(" "),s("ul",[s("li",[t._v("python")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'(\\d{2})-(\\d{2})-(\\d{4})'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\3年\\1月\\2日'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02-20-2020 05-21-2020'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020年02月20日 2020年05月21日'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以在替换中使用 \\g<数字>，如果分组多于10个时避免歧义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\g<3>年\\g<1>月\\g<2>日'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02-20-2020 05-21-2020'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020年02月20日 2020年05月21日'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回替换次数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\3年\\1月\\2日'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02-20-2020 05-21-2020'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020年02月20日 2020年05月21日'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("java\n"),s("ul",[s("li",[t._v("替换时 引用子组要用  "),s("code",[t._v("$")])])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法1，输出 2020年02月20日 2020年05月21日")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02-20-2020 05-21-2020"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(\\\\d{2})-(\\\\d{2})-(\\\\d{4})"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$3年$1月$2日"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法2，输出 2020年02月20日 2020年05月21日")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(\\\\d{2})-(\\\\d{2})-(\\\\d{4})"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" match "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02-20-2020 05-21-2020"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$3年$1月$2日"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("切割")]),t._v(" "),s("p",[s("strong",[t._v("切割得到单词")])]),t._v(" "),s("ul",[s("li",[t._v("python")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\W+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple, pear! orange; tea"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pear'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tea'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制切割次数，比如切一刀，变成两部分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple, pear! orange; tea"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pear! orange; tea'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("java")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\W+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple, pear! orange; tea"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("示例")]),t._v(" "),s("p",[s("strong",[t._v("xxx#163.com (请把#换成@)")])]),t._v(" "),s("ul",[s("li",[t._v("python")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 替换——在用正则提取邮箱\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'#'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'@'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx#163.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx@163.com'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("提取\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\w+[#@]\\w+.\\w+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'联系邮箱：xxx#163.com (请把#换成@) 联系邮箱：xxx@163.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx#163.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx@163.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("java")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//替换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" compile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" compile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx#163.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//提取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//提取 带#或者带@的邮箱")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+[@#]\\\\w+.\\\\w+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"联系邮箱：xxx#163.com (请把#换成@) 联系邮箱：xxx@163.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E5%8E%9F%E7%90%86.webp",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"正则匹配原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则匹配原理"}},[t._v("#")]),t._v(" 正则匹配原理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有穷状态自动机")]),t._v(" "),s("ul",[s("li",[t._v("正则之所以能够处理复杂文本，就是因为采用了有穷状态自动机")]),t._v(" "),s("li",[t._v("有穷自动机的具体实现称为正则引擎，主要有 DFA 和 NFA 两种\n"),s("ul",[s("li",[t._v("DFA：确定性有穷自动机（Deterministic finite automaton）\nNFA：非确定性有穷自动机（Non-deterministic finite automaton）")])])])])]),t._v(" "),s("li",[s("p",[t._v("正则匹配过程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("编译**(compile)**的过程，其实就是生成自动机的过程")])]),t._v(" "),s("li",[s("p",[t._v("NFA工作机制")]),t._v(" "),s("p",[s("strong",[t._v("NFA 引擎的工作方式是，先看正则，再看文本，而且以正则为主导")])]),t._v(" "),s("blockquote",[s("p",[t._v("字符串：we study on jikeshijian app\n正则：jike(zhushou|shijian|shixi)")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("正则中的第一个字符是 j，NFA 引擎在字符串中查找 j，接着匹配其后是否为 i ，如果是 i 则继续，这样一直找到 jike")]),t._v(" "),s("blockquote",[s("p",[t._v("regex: jike(zhushou|shijian|shixi)\n^\ntext: we study on jikeshijian app\n^")])])]),t._v(" "),s("li",[s("p",[t._v("我们再根据正则看文本后面是不是 z，发现不是，此时 zhushou 分支淘汰")]),t._v(" "),s("blockquote",[s("p",[t._v("regex: jike(zhushou|shijian|shixi)\n^\n淘汰此分支(zhushou)\ntext: we study on jikeshijian app\n^")])])]),t._v(" "),s("li",[s("p",[t._v("我们接着看其它的分支，看文本部分是不是 s，直到 shijian 整个匹配上。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("shijian 在匹配过程中如果不失败，就不会看后面的 shixi 分支。")])])]),t._v(" "),s("li",[s("p",[t._v("假设这里文本改一下，把 jikeshijian 变成 jikeshixi，正则 shijian 的 j 匹配不上时 shixi 的 x，会接着使用正则 shixi 来进行匹配，"),s("strong",[t._v("重新从 s 开始（NFA 引擎会记住这里）")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("第二个分支匹配失败\nregex: jike(zhushou|shijian|shixi)\n^\n淘汰此分支(正则j匹配不上文本x)\ntext: we study on jikeshixi app\n^")]),t._v(" "),s("p",[t._v("再次尝试第三个分支\nregex: jike(zhushou|shijian|shixi)\n^\ntext: we study on jikeshixi app\n^")])])])])]),t._v(" "),s("li",[s("p",[t._v("DFA工作机制")]),t._v(" "),s("p",[s("strong",[t._v("DFA 会先看文本，再看正则表达式，是以文本为主导的")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("DFA 会从 we 中的 w 开始依次查找 j，定位到 j ，这个字符后面是 i。所以我们接着看正则部分是否有 i ，如果正则后面是个 i ，那就以同样的方式，匹配到后面的 ke")]),t._v(" "),s("blockquote",[s("p",[t._v("text: we study on jikeshijian app\n^\nregex: jike(zhushou|shijian|shixi)\n^")])])]),t._v(" "),s("li",[s("p",[t._v("继续进行匹配，文本 e 后面是字符 s ，DFA 接着看正则表达式部分，此时 zhushou 分支被淘汰，开头是 s 的分支 shijian 和 shixi 符合要求。")]),t._v(" "),s("blockquote",[s("p",[t._v("text: we study on jikeshijian app\n^\nregex: jike(zhushou|shijian|shixi)\n^               ^            ^\n淘汰       符合        符合")])])]),t._v(" "),s("li",[s("p",[t._v("然后 DFA 依次检查字符串，检测到 shijian 中的 j 时，只有 shijian 分支符合，淘汰 shixi，接着看分别文本后面的 ian，和正则比较，匹配成功。")]),t._v(" "),s("blockquote",[s("p",[t._v("text: we study on jikeshijian app\n^\nregex: jike(zhushou|shijian|shixi)\n^            ^\n符合     淘汰")])])])])]),t._v(" "),s("li",[s("p",[t._v("DFA与NFA")]),t._v(" "),s("ul",[s("li",[t._v("一般来说，DFA 引擎会更快一些，因为整个匹配过程中，字符串只看一遍，不会发生回溯，相同的字符不会被测试两次。也就是说 DFA 引擎执行的时间一般是线性的。DFA 引擎可以确保匹配到可能的最长字符串。但由于 DFA 引擎只包含有限的状态，所以它没有反向引用功能；并且因为它不构造显示扩展，它也不支持捕获子组。")]),t._v(" "),s("li",[t._v("NFA 以表达式为主导，它的引擎是使用贪心匹配回溯算法实现。"),s("strong",[t._v("NFA 通过构造特定扩展，支持子组和反向引用")]),t._v("。但由于 NFA 引擎会发生回溯，即它会对字符串中的同一部分，进行很多次对比。因此，在最坏情况下，它的执行速度可能非常慢。")])])]),t._v(" "),s("li",[s("p",[t._v("POSIX NFA")]),t._v(" "),s("ul",[s("li",[t._v("POSIX NFA 引擎与传统的 NFA 引擎类似，但不同之处在于，"),s("strong",[t._v("POSIX NFA 在找到可能的最长匹配之前会继续回溯")]),t._v("，也就是说它会"),s("strong",[t._v("尽可能找最长")]),t._v("的，如果分支一样长，以最左边的为准")]),t._v(" "),s("li",[t._v("比如使用正则 pos|posix 在文本 posix 中进行匹配，传统的 NFA 从文本中找到的是 pos，而不是 posix，而 POSIX NFA 找到的是 posix")])])]),t._v(" "),s("li",[s("p",[t._v("三者比较")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E4%B8%89%E8%80%85%E5%B7%A5%E4%BD%9C%E5%BC%95%E6%93%8E.webp",alt:""}})])])]),t._v(" "),s("h4",{attrs:{id:"回溯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回溯"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),s("p",[t._v("回溯是 NFA 引擎才有的，并且只有在正则中出现"),s("strong",[t._v("量词或多选分支结构")]),t._v("时，才可能会发生回溯。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("+")])]),t._v(" "),s("blockquote",[s("p",[t._v("比如我们使用正则 a+ab 来匹配 文本 aab 的时候，过程是这样的，a+ 是贪婪匹配，会占用掉文本中的两个 a，但正则接着又是 a，文本部分只剩下 b，只能通过回溯，让 a+ 吐出一个 a，再次尝试")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".*")])]),t._v(" "),s("blockquote",[s("p",[t._v("如果正则是使用 .*ab 去匹配一个比较长的字符串就更糟糕了，因为 .* 会吃掉整个字符串（不考虑换行，假设文本中没有换行），然后，你会发现正则中还有 ab 没匹配到内容，只能将 .* 匹配上的字符串吐出一个字符，再尝试，还不行，再吐出一个，不断尝试")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%9C%80%E9%95%BF%E5%8C%B9%E9%85%8D.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("所以在工作中，我们要尽量不用 .*,可以用其他方式来替换\n"),s("ul",[s("li",[t._v("比如要提取引号中的内容时")]),t._v(" "),s("li",[s("code",[t._v('".+?"')]),t._v("——非贪婪模式")]),t._v(" "),s("li",[s("code",[t._v('"[^"]+"')]),t._v("——双引号内部，非双引号的字符")])])])])])]),t._v(" "),s("h4",{attrs:{id:"优化原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化原则"}},[t._v("#")]),t._v(" 优化原则")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("测试性能的方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用ipyhon来测试正则表达式")]),t._v(" "),s("ul",[s("li",[t._v("win+R——输入 ipython")]),t._v(" "),s("li",[s("a",{attrs:{href:"http://t.zoukankan.com/lmg-jie-p-9171999.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipython使用技巧"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),t._v("\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timeit re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")]),t._v(" µs ± "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.06")]),t._v(" µs per loop "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean ± std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" of "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" loops each"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("可以通过前面 regex101.com 查看正则和文本匹配的次数")])])])]),t._v(" "),s("li",[s("p",[t._v("提前编译好正则")]),t._v(" "),s("ul",[s("li",[t._v("compile")])])]),t._v(" "),s("li",[s("p",[t._v("尽量准确表示匹配范围")]),t._v(" "),s("ul",[s("li",[t._v("我们可以写成"),s("code",[t._v('“[^"]+”')]),t._v("。使用"),s("code",[t._v('[^"]')]),t._v("要比使用点号好很多")])])]),t._v(" "),s("li",[s("p",[t._v("提取出公共部分")]),t._v(" "),s("ul",[s("li",[t._v("因为 NFA 以正则为主导，会导致字符串中的某些部分重复匹配多次，影响效率。")]),t._v(" "),s("li",[s("code",[t._v("(abcd|abxy)")]),t._v("这样的表达式，可以优化成"),s("code",[t._v("ab(cd|xy)")])]),t._v(" "),s("li",[s("code",[t._v("(^this|^that) is")]),t._v("——"),s("code",[t._v("^th(is|at) is")]),t._v("——锚点部分独立处理")]),t._v(" "),s("li",[s("code",[t._v("this|that")]),t._v("——"),s("code",[t._v("th(?:is|at)")])])])]),t._v(" "),s("li",[s("p",[t._v("出现可能性大的放左边")]),t._v(" "),s("ul",[s("li",[t._v("由于正则是从左到右看的，所有在分支中，把可能性大的放到左边")])])]),t._v(" "),s("li",[s("p",[t._v("在必要时才使用子组")]),t._v(" "),s("ul",[s("li",[t._v("在正则中，括号可以用于归组，但如果某部分后续不会再用到，就不需要保存成子组。")]),t._v(" "),s("li",[s("code",[t._v("(?:)")]),t._v("——不保存子组")])])]),t._v(" "),s("li",[s("p",[t._v("警惕嵌套的子组重复")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(.*)*")]),t._v("这个正则，匹配的次数会呈指数级增长")])])]),t._v(" "),s("li",[s("p",[t._v("避免不同分支重复匹配")])])]),t._v(" "),s("h4",{attrs:{id:"示例-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-4"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("针对这个示例，NFA 引擎的匹配过程")]),t._v(" "),s("blockquote",[s("p",[t._v("文本：a12----开始部分用△表示，结束部分用○表示")]),t._v(" "),s("p",[t._v("即：△a12○")]),t._v(" "),s("p",[t._v("正则：^(?=[a-z])[a-z0-9]+$")])]),t._v(" "),s("blockquote",[s("p",[t._v("^——△")]),t._v(" "),s("p",[t._v("(?=[a-z])——a")]),t._v(" "),s("p",[t._v("[a-z0-9]——△——a12")]),t._v(" "),s("p",[t._v("$——○")])]),t._v(" "),s("h2",{attrs:{id:"正则解决常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则解决常见问题"}},[t._v("#")]),t._v(" 正则解决常见问题")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6.webp",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"正则处理问题的基本思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则处理问题的基本思路"}},[t._v("#")]),t._v(" 正则处理问题的基本思路")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("比如将问题分解成多个小问题，每个小问题见招拆招。")])]),t._v(" "),s("li",[s("p",[t._v("某个位置上可能有多个字符的话，就⽤字符组。")])]),t._v(" "),s("li",[s("p",[t._v("某个位置上有多个字符串的话，就⽤多选结构。")])]),t._v(" "),s("li",[s("p",[t._v("出现的次数不确定的话，就⽤量词。")])]),t._v(" "),s("li",[s("p",[t._v("对出现的位置有要求的话，就⽤锚点锁定位置。")])]),t._v(" "),s("li",[s("p",[t._v("在正则中比较难的是某些字符不能出现，这个情况又可以进一步分为以下两种")]),t._v(" "),s("ul",[s("li",[t._v("组成中不能出现\n"),s("ul",[s("li",[t._v("要查找的内容中不能出现某些字符——"),s("code",[t._v("[^aeiou]")]),t._v("——不能出现元音")]),t._v(" "),s("li",[t._v("例如 要求密码6位，但是不能有两个连续数字出现\n"),s("ul",[s("li",[s("code",[t._v("^((?!\\d\\d)\\w){6}$")])]),t._v(" "),s("li",[s("code",[t._v("(?!\\d\\d)")]),t._v("——代表右边不能是两个数字，但是左边没有正则，即为空字符串")])])])])]),t._v(" "),s("li",[t._v("要查找的内容前后不能出现——环视")])])])]),t._v(" "),s("h4",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("匹配数字")]),t._v(" "),s("ul",[s("li",[t._v("数字—— "),s("code",[t._v("\\d")]),t._v(" 或"),s("code",[t._v("[0-9]")])]),t._v(" "),s("li",[t._v("连续的多个数字—— "),s("code",[t._v("\\d+")]),t._v(" 或"),s("code",[t._v("[0-9]+")])]),t._v(" "),s("li",[t._v("n 位数字—— "),s("code",[t._v("\\d{n}")]),t._v("。")]),t._v(" "),s("li",[t._v("至少 n 位数据——"),s("code",[t._v("\\d{n,}")]),t._v("。")]),t._v(" "),s("li",[t._v("m-n 位数字—— "),s("code",[t._v("\\d{m,n}")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[t._v("匹配正数、负数、小数（浮点数）")]),t._v(" "),s("ul",[s("li",[t._v("3，3.14，-3，+2.7，20.12\n"),s("ul",[s("li",[s("code",[t._v("[+-]?\\d+[.]?\\d*")])]),t._v(" "),s("li",[s("code",[t._v("[+-]?\\d+(?:\\.\\d+)?")]),t._v(" "),s("ul",[s("li",[t._v("——"),s("code",[t._v("(?:)")]),t._v("表示不保留子组——"),s("code",[t._v("\\.")]),t._v("表示转义"),s("code",[t._v(".")])])])])])]),t._v(" "),s("li",[t._v(".5，+.5——考虑这种极端情况（负号的时候整数部分不能没有，而正数的时候整数部分可以没有）\n"),s("ul",[s("li",[t._v("正数："),s("code",[t._v("+?(?:\\d+(?:\\.\\d+)?|\\.\\d+)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\d+(?:\\.\\d+)?")]),t._v("和"),s("code",[t._v("\\.\\d+")]),t._v("两个分支")])])]),t._v(" "),s("li",[t._v("负数："),s("code",[t._v("-\\d+(?:\\.\\d+)?")])]),t._v(" "),s("li",[t._v("组合："),s("code",[t._v("-\\d+(?:\\.\\d+)?|\\+?(?:\\d+(?:\\.\\d+)?|\\.\\d+)")]),t._v("——正数和负数两个分支")])])])])]),t._v(" "),s("li",[s("p",[t._v("十六进制数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[0-9a-fA-F]+")])])])]),t._v(" "),s("li",[s("p",[t._v("手机号码")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%89%8B%E6%9C%BA%E5%8F%B7.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("限制前两位\n"),s("ul",[s("li",[s("code",[t._v("1[3-9]\\d{9}")])])])]),t._v(" "),s("li",[t._v("限制前三位\n"),s("ul",[s("li",[t._v("13:"),s("code",[t._v("13[0-9]\\d{8}")])]),t._v(" "),s("li",[t._v("14:"),s("code",[t._v("14[5-9]\\d{8}")])]),t._v(" "),s("li",[t._v("15:"),s("code",[t._v("15[0-35-9]\\d{8}")])]),t._v(" "),s("li",[t._v("16:"),s("code",[t._v("16[2567]\\d{8}")])]),t._v(" "),s("li",[t._v("17:"),s("code",[t._v("17[0-8]\\d{8}")])]),t._v(" "),s("li",[t._v("18:"),s("code",[t._v("18[0-9]\\d{8}")])]),t._v(" "),s("li",[t._v("19:"),s("code",[t._v("19[1389]\\d{8}")])]),t._v(" "),s("li",[t._v("组合："),s("code",[t._v("1(?:3[0-9]|4[5-9]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[1389])\\d{8}")])])])])])]),t._v(" "),s("li",[s("p",[t._v("身份证号码")]),t._v(" "),s("ul",[s("li",[t._v("第一代是 15 位，第二代是 18 位;如果是 18 位，最后一位可以是 X（或 x），两代开头都不能是 0")]),t._v(" "),s("li",[t._v("15:"),s("code",[t._v("[1-9]\\d{14}")])]),t._v(" "),s("li",[t._v("18:"),s("code",[t._v("[1-9]\\d{16}[\\dXx]")])]),t._v(" "),s("li",[t._v("组合："),s("code",[t._v("[1-9]\\d{14}(\\d{2}[\\dXx])?")])])])]),t._v(" "),s("li",[s("p",[t._v("邮政编码")]),t._v(" "),s("ul",[s("li",[t._v("邮编一般为 6 位数字,需要加断言")]),t._v(" "),s("li",[s("code",[t._v("(?<!\\d)\\d{6}(?!\\d)")]),t._v("——左边不是数字，右边不是数字")])])]),t._v(" "),s("li",[s("p",[t._v("QQ号码")]),t._v(" "),s("ul",[s("li",[t._v("QQ 号不能以 0 开头，最长的有 10 位，最短的从 10000（5 位）开始")]),t._v(" "),s("li",[s("code",[t._v("[1-9]\\d{4,9}?")]),t._v("——"),s("code",[t._v("\\d{4,9}")]),t._v(",表示数字出现4次到9次")])])]),t._v(" "),s("li",[s("p",[t._v("中文字符")]),t._v(" "),s("ul",[s("li",[t._v("中文属于多字节 Unicode 字符，通过 Unicode 属性，但有一些语言是不支持这种属性的")]),t._v(" "),s("li",[t._v("另外一个办法，就是码值的范围，中文的范围是 4E00 - 9FFF 之间")]),t._v(" "),s("li",[t._v("Python，Java，JavaScript 中，Unicode 可以写成 \\u码值 来表示，即匹配中文的正则可以写成 [\\u4E00-\\u9FFF]，在 PHP 中使用，Unicode 就需要写成 \\u{码值} 的样式。")])]),t._v(" "),s("div",{staticClass:"language-pyt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 测试环境，Python3\n>>> import re\n>>> reg = re.compile(r'[\\u4E00-\\u9FFF]')\n>>> reg.findall(\"和伟忠一起学正则regex\")\n['和', '伟', '忠', '一', '起', '学', '正', '则']\n")])])])]),t._v(" "),s("li",[s("p",[t._v("IPV4地址")]),t._v(" "),s("ul",[s("li",[t._v("IPv4 地址通常表示成 27.86.1.226 的样式，4 个数字用点隔开，每一位范围是 0-255")]),t._v(" "),s("li",[t._v("简单版："),s("code",[t._v("\\d{1,3}(?:\\.\\d{1,3}){3}")])]),t._v(" "),s("li",[t._v("按位数考虑\n"),s("ul",[s("li",[t._v("1位——"),s("code",[t._v("1.")]),t._v("--"),s("code",[t._v("01.")]),t._v("--"),s("code",[t._v("001.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("0{0,2}\\d")])])])]),t._v(" "),s("li",[t._v("2位——"),s("code",[t._v("10.")]),t._v("--"),s("code",[t._v("010.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("0?\\d\\d")])])])]),t._v(" "),s("li",[t._v("3位——"),s("code",[t._v("100.")]),t._v("--"),s("code",[t._v("255.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1\\d\\d|2[0-5][0-5]")])])])]),t._v(" "),s("li",[t._v("组合——"),s("code",[t._v("0{0,2}\\d|0?\\d\\d|1\\d\\d|2[0-5][0-5]")]),t._v("=x")]),t._v(" "),s("li",[t._v("组合改进——长的分支放到左边——"),s("code",[t._v("1\\d\\d|2[0-5][0-5]|0?\\d\\d|0{0,2}\\d")]),t._v("=x")])])]),t._v(" "),s("li",[t._v("加上点——x.x.x.x\n"),s("ul",[s("li",[s("code",[t._v("(?:x)(?:\\.(?:x)){3}")])]),t._v(" "),s("li",[s("code",[t._v("(?:1\\d\\d|2[0-5][0-5]|0?\\d\\d|0{0,2}\\d)(?:\\.(?:1\\d\\d|2[0-5][0-5]|0?\\d\\d|0{0,2}\\d)){3}")])])])])])]),t._v(" "),s("li",[s("p",[t._v("日期")]),t._v(" "),s("ul",[s("li",[t._v("日期格式  yyyy-mm-dd")]),t._v(" "),s("li",[t._v("简单："),s("code",[t._v("\\d{4}-\\d{2}-\\d{2}")])]),t._v(" "),s("li",[t._v("复杂：考虑月份 1-12，一位时0可带可不带；日期 1-31（像 30，29,28这种应该交给程序来完成，不要用正则完成所有的事情）\n"),s("ul",[s("li",[t._v("年："),s("code",[t._v("\\d{4}")])]),t._v(" "),s("li",[t._v("月："),s("code",[t._v("1[0-2]|0?[1-9]")]),t._v("——两位的写在前面")]),t._v(" "),s("li",[t._v("日："),s("code",[t._v("[12]\\d|3[01]|0?[1-9]")])]),t._v(" "),s("li",[t._v("组合："),s("code",[t._v("\\d{4}-(?:1[0-2]|0?[1-9])-(?:[12]\\d|3[01]|0?[1-9])")])])])])])]),t._v(" "),s("li",[s("p",[t._v("时间")]),t._v(" "),s("ul",[s("li",[t._v("24小时制——23:24")]),t._v(" "),s("li",[t._v("小时：0-23；分钟：0-59")]),t._v(" "),s("li",[s("code",[t._v("(?:2[0-3]|1[0-9]|0?[0-9]):(?:[1-5][0-9|0?[0-9]])")])]),t._v(" "),s("li",[t._v("12小时制——11:59")]),t._v(" "),s("li",[t._v("小时：0-11；分钟：0-59")]),t._v(" "),s("li",[s("code",[t._v("(?:1[01]|0?[0-9]):(?:[1-5][0-9|0?[0-9]])")])])])]),t._v(" "),s("li",[s("p",[t._v("邮箱")]),t._v(" "),s("ul",[s("li",[t._v("格式是 用户名 @主机名，用户名部分通常可以有英文字母，数字，下划线，点等组成，但其中点不能在开头，也不能重复出现")]),t._v(" "),s("li",[t._v("简单版："),s("code",[t._v("[\\w.]+@[\\w]+\\.[\\w]+")])])])]),t._v(" "),s("li",[s("p",[t._v("网页标签")]),t._v(" "),s("ul",[s("li",[t._v("配对出现的标签，不区分大小写,title\n"),s("ul",[s("li",[s("code",[t._v("(?si)<title.*?>.*<\\/title>")])])])]),t._v(" "),s("li",[t._v("提取引号里面的内容\n"),s("ul",[s("li",[s("code",[t._v('".+"')])]),t._v(" "),s("li",[s("code",[t._v('"[^"]+"')]),t._v("——带"),s("code",[t._v('""')])]),t._v(" "),s("li",[s("code",[t._v('(?<=")[^"]+(?=")')]),t._v("——不带"),s("code",[t._v('""')])])])]),t._v(" "),s("li",[t._v("提取尖括号<>里面的内容\n"),s("ul",[s("li",[s("code",[t._v("<[^>]+>")]),t._v("——带"),s("code",[t._v("<>")])]),t._v(" "),s("li",[s("code",[t._v("(?<=<)[^>]+(?=>)")]),t._v("——不带"),s("code",[t._v("<>")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"从编程语言的角度来理解正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从编程语言的角度来理解正则表达式"}},[t._v("#")]),t._v(" 从编程语言的角度来理解正则表达式")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.webp",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("使用第 4 代语言来描述问题，而无需花费大量时间，去考虑具体的处理逻辑和算法实现，处理逻辑和算法实现是由编译器（Compiler）或解释器（Interpreter）这样的语言解析引擎来负责。")])]),t._v(" "),s("ul",[s("li",[t._v("正则表达式属于"),s("strong",[t._v("声明式编程范式")])])]),t._v(" "),s("blockquote",[s("p",[t._v("声明式编程范式，主要是模拟人脑思维的过程。声明式重目标、轻过程，专注问题的分析和表达，而不是算法实现。它不用指明执行顺序，属于目标导向，强调的是定义问题的描述——即“做什么”，因而目标是显性而算法是隐性的。")])]),t._v(" "),s("ul",[s("li",[s("ul",[s("li",[t._v("因此，从编程范式的角度来看：")]),t._v(" "),s("li",[t._v("声明式编程的世界观是：程序是由若干目标任务组成的有序列表；")]),t._v(" "),s("li",[t._v("声明式编程的方法论是：用语法元素来描述任务，由解析引擎转化为指令并执行。")])])]),t._v(" "),s("li",[s("p",[t._v("正则表达式的语法元素本质上就是程序逻辑和算法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("正则表达式中的星号量词“*”这一元字符，就是高级语言的处理逻辑“循环结构”的体现。具体来说，星号量词“*”代表的是不定次数循环结构，而前后多个星号量词的嵌套就是多层不定次数循环结构的嵌套；")])]),t._v(" "),s("li",[s("p",[t._v("或运算符，也就是竖线“|”这个元字符，就是高级语言的处理逻辑“分支结构”的体现；")])]),t._v(" "),s("li",[s("p",[t._v("而用于分组的圆括号“()”，就相当于高级语言的作用域。")])]),t._v(" "),s("li",[s("p",[t._v("而当或运算符“|”出现在由星号量词“*”所限定的分组圆括号“()”中时，其实就是在“循环结构”中嵌套了“分支结构”；")])]),t._v(" "),s("li",[s("p",[t._v("而如果进一步地，“循环结构”所嵌套的“分支结构”中的某个分支，又被某个星号量词“*”所限定，那么则相当于“循环结构”所嵌套的“分支结构”又嵌套了“循环结构”。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("(张三|李四 *)*")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%BC%A0%E4%B8%89%E6%9D%8E%E5%9B%9B.webp",alt:""}})])])])])]),t._v(" "),s("p",[t._v("​")])])}),[],!1,null,null,null);s.default=e.exports}}]);